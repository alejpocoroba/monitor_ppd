numero_de_heridos_as_total,
numero_de_heridos_hombres,
numero_de_heridas_mujeres,
ataque_armado) %>%
# filter(ataque_armado == "enfrentamiento") %>%
filter(ataque_armado == "agresión") %>%
filter(numero_de_heridos_as_total >= "1")
sum(df_heridxs_dos$numero_de_heridos_hombres, na.rm = T)
sum(df_heridxs_dos$numero_de_heridas_mujeres, na.rm = T)
view(df_homicidios_d1)
mean(df_homicidios_d1$total_homicidios)
199/210
View(df_juarez1)
view(df_homicidios_d1)
table(agresion$pertenece_a)
table(agresion$herido_a_pertenece_a)
table(enfrentamiento$pertenece_a)
table(enfrentamiento$herido_a_pertenece_a)
View(df_chi2)
df_juarez1 <- df_chi2 %>%
filter(municipio == "Juárez-08-037") %>%
filter(fecha_de_los_hechos >= "2022-06-01") %>%
filter(fecha_de_los_hechos <= "2022-10-31") %>%
# variables de interés
select(-c("datos_generales":"fecha_de_publicacion",
"enlace", "titulo_de_la_nota":"hechos",
"pais":"municipio",
"grupos_criminales":"grupos_criminales_gc",
"actividades_delictivas": "muertos",
"victimas", "detenidos_as", "ataque_armado_t",
"otras_actividades_delictivas", "presencia_internacional",
"presencia_no_violenta_t", "presencia_no_violenta",
"instituciones_de_seguridad": "fuerzas_armadas",
"fuerzas_de_seguridad", "politica_de_seguridad_y_de_drogas",
"politica_de_drogas"))
openxlsx::write.xlsx(df_juarez1,
file = paste_out("juarez.xlsx"), overwrite = T)
df_juarez1 <- df_chi2 %>%
filter(municipio == "Juárez-08-037") %>%
filter(fecha_de_los_hechos >= "2022-06-01") %>%
filter(fecha_de_los_hechos <= "2022-10-31") %>%
# variables de interés
select(-c("datos_generales":"fecha_de_publicacion",
"enlace", "nombre_de_la_fuente":"hechos",
"pais":"municipio",
"grupos_criminales":"grupos_criminales_gc",
"actividades_delictivas": "muertos",
"victimas", "detenidos_as", "ataque_armado_t",
"otras_actividades_delictivas", "presencia_internacional",
"presencia_no_violenta_t", "presencia_no_violenta",
"instituciones_de_seguridad": "fuerzas_armadas",
"fuerzas_de_seguridad", "politica_de_seguridad_y_de_drogas",
"politica_de_drogas"))
openxlsx::write.xlsx(df_juarez1,
file = paste_out("juarez.xlsx"), overwrite = T)
df_juarez1 <- df_chi2 %>%
filter(municipio == "Juárez-08-037") %>%
filter(fecha_de_los_hechos >= "2022-06-01") %>%
filter(fecha_de_los_hechos <= "2022-10-31") %>%
# variables de interés
select(-c("datos_generales":"fecha_de_publicacion",
"nombre_de_la_fuente":"hechos",
"pais":"municipio",
"grupos_criminales":"grupos_criminales_gc",
"actividades_delictivas": "muertos",
"victimas", "detenidos_as", "ataque_armado_t",
"otras_actividades_delictivas", "presencia_internacional",
"presencia_no_violenta_t", "presencia_no_violenta",
"instituciones_de_seguridad": "fuerzas_armadas",
"fuerzas_de_seguridad", "politica_de_seguridad_y_de_drogas",
"politica_de_drogas"))
# Guardar base de Juárez
openxlsx::write.xlsx(df_juarez1,
file = paste_out("juarez.xlsx"), overwrite = T)
chi_seg <- df_chi2 %>%
filter(fecha_de_los_hechos >= "2022-06-01") %>%
filter(fecha_de_los_hechos <= "2022-10-31") %>%
select(enlace, politica_de_seguridad) %>%
filter(politica_de_seguridad == "TRUE")
View(chi_seg)
chi_seg <- df_chi2 %>%
filter(fecha_de_los_hechos >= "2022-06-01") %>%
filter(fecha_de_los_hechos <= "2022-10-31") %>%
select(enlace, titulo_de_la_nota, politica_de_seguridad) %>%
filter(politica_de_seguridad == "TRUE")
chi_seg <- df_chi2 %>%
filter(fecha_de_los_hechos >= "2022-06-01") %>%
filter(fecha_de_los_hechos <= "2022-10-31") %>%
select(enlace, titulo_de_la_nota, politica_de_seguridad, municipio) %>%
filter(politica_de_seguridad == "TRUE")
view(df_cuerpos_d1)
View(df_juarez1)
view(df_cuerpos_d1)
options(dplyr.summarise.inform = FALSE)
require(pacman)
p_load(
readxl, tidyverse, dplyr, srvyr, zoo, ggtext, beepr)
rm(list=ls())
paste_inp <- function(x){paste0("02_datos_crudos/" , x)}
paste_out <- function(x){paste0("03_datos_limpios/", x)}
paste_fig <- function(x){paste0("04_figuras/"      , x)}
#junio
m1 <- read_xlsx(paste_inp("Monitor_junio/Monitor_PPD_junio1.xlsx"))
m2 <- read_xlsx(paste_inp("Monitor_junio/Monitor_PPD_junio2.xlsx"))
# julio
m3 <- read_xlsx(paste_inp("Monitor_PPD_julio.xlsx"))
# Agosto
m4 <- read_xlsx(paste_inp("Monitor_PPD_agosto1.xlsx"))
m5 <- read_xlsx(paste_inp("Monitor_PPD_agosto2.xlsx"))
m6 <- read_xlsx(paste_inp("Monitor_PPD_agosto3.xlsx"))
# Septiembre
m7 <- read_xlsx(paste_inp("Monitor_PPD_septiembre1.xlsx"))
m8 <- read_xlsx(paste_inp("Monitor_PPD_septiembre2.xlsx"))
#Octubre
m9 <- read_xlsx(paste_inp("Monitor_PPD_octubre.xlsx"))
m10 <- read_xlsx(paste_inp("Monitor2_PPD_noviembre11.10.xlsx"))
View(m10)
df_j <- m1 %>%
rename("1.2.2) Enlace" = "1.2.1) Enlace",
"1.2.5) Nota complementaria/duplicada" = "1.2.5) Nota duplicada") %>%
mutate(
`1.2.6) Enlaces de notas complementaria/duplicada` =
paste(`1.2.6) Enlace de nota duplicada`, `1.2.6.1) Enlaces de notas duplicadas`,
sep = ";")) %>%
select(-c(`1.2.6) Enlace de nota duplicada`,
`1.2.6.1) Enlaces de notas duplicadas`))
# Bases que tienen valores ocultos de origen
m5 <- m5 %>%
filter(!is.na(Id))
m6 <- m6 %>%
filter(!is.na(Id))
df_pegada <- df_j %>% # base junio 1
bind_rows(m2) %>%   # base junio 2
bind_rows(m3) %>%   # base julio
bind_rows(m4) %>%   # base agosto 1
bind_rows(m5) %>%   # base agosto 2
bind_rows(m6) %>%   # base agosto 3
bind_rows(m7) %>%   # base septiembre 1
bind_rows(m8) %>%   # base septiembre 2
bind_rows(m9)       # base octubre
df_microdatos <- df_pegada %>%
janitor::clean_names()
View(df_microdatos)
View(df_pegada)
df_microdatos <- df_pegada %>%
janitor::clean_names() %>%
select("responsable"          = "x1_1_responsable")
View(df_microdatos)
df_microdatos <- df_pegada %>%
janitor::clean_names() %>%
select("responsable"          = "x1_1_responsable",
"fecha_de_publicacion" = "x1_2_1_fecha_de_publicacion",
"estado"               = "x1_3_3_estado")
View(df_microdatos)
df_microdatos1 <- df_pegada %>%
janitor::clean_names() %>%
select("responsable"          = "x1_1_responsable",
"fecha_de_publicacion" = "x1_2_1_fecha_de_publicacion",
"estado"               = "x1_3_3_estado")
View(m10)
colnames(m10)
df_microdatos2 <- m10 %>%
janitor::clean_names()
colnames(m10)
df_microdatos1 <- df_pegada %>%
janitor::clean_names() %>%
select("responsable" = "x1_1_responsable",
"publicacion" = "x1_2_1_fecha_de_publicacion",
"estado"      = "x1_3_3_estado")
df_microdatos2 <- m10 %>%
janitor::clean_names() %>%
select("responsable" = "1.1) Responsable",
"publicacion" = "1.2.1) Fecha de publicación",
"estado"      = "1.3.3) Estado")
View(m10)
m10 %>%
janitor::clean_names()
colnames(m10)
colnames(df_microdatos2)
df_microdatos2 <- m10 %>%
janitor::clean_names() %>%
select("responsable" = "x1_1_responsable",
"publicacion" = "x1_2_1_fecha_de_publicacion",
"estado"      = "x1_3_3_estado")
View(df_microdatos2)
df_microdatos <-  df_microdatos1 %>%
bind_rows(df_microdatos2)
View(df_microdatos)
df_microdatos3 <-  df_microdatos1 %>%
bind_rows(df_microdatos2)
df_microdatos3 <-  df_microdatos1 %>%
bind_rows(df_microdatos2)  %>%
mutate(mes = lubridate::month(fecha_de_publicacion)) %>%
mutate(
id_entidad = str_extract_all(estado, "[:digit:]"))
df_microdatos3 <-  df_microdatos1 %>%
bind_rows(df_microdatos2)  %>%
mutate(mes = lubridate::month(publicacion)) %>%
mutate(
id_entidad = str_extract_all(estado, "[:digit:]"))
View(df_microdatos3)
df_responsable <- df_microdatos3 %>%
group_by(responsable) %>%
summarise(notas = n()) %>%
ungroup() %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
View(df_responsable)
df_responsable_mes <- df_microdatos3 %>%
group_by(mes, responsable) %>%
summarise(notas = n()) %>%
ungroup() %>%
group_by(mes) %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
View(df_responsable_mes)
df_entidad<- df_microdatos3 %>%
group_by(estado) %>%
summarise(notas = n()) %>%
ungroup() %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
View(df_entidad)
View(df_entidad)
paste0("Total de notas capturadas: ", dim(df_microdatos3)[1])
paste0("Número total de observaciones entre junio y noviembre de 2002 es de
", dim(df_microdatos3)[1])
paste0("Número total de observaciones entre junio y noviembre de 2002: ", dim(df_microdatos3)[1])
table(df_microdatos$mes)
table(df_microdatos3$mes)
table(df_microdatos$responsable)
table(df_microdatos3$responsable)
ggplot(df_responsable_mes,
aes(x = mes, y = porcentaje, fill = responsable)) +
geom_col()
ggplot(df_responsable_mes,
aes(x = mes, y = notas, fill = responsable)) +
geom_col()
df_data <- df_microdatos3 %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()
) %>%
filter(!is.na(estado)) %>%
drop_na()
ggplot(
# Datos
df_data %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = "Total de observaciones capturadas para el Monitor PPD de junio a noviembre",
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Monitor-PPD al 11/11/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Temas
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig("01_captura_general.png"),
width = 10, height = 6)
ggplot(
# Datos
df_data1 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = "Total de observaciones capturadas para el Monitor PPD de junio a noviembre",
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Monitor-PPD al 11/11/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Temas
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
df_data1 <- df_microdatos3 %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()) %>%
filter(!is.na(estado)) %>%
drop_na()
ggplot(
# Datos
df_data1 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = "Total de observaciones capturadas para el Monitor PPD de junio a noviembre",
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Monitor-PPD al 11/11/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Temas
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig("01_captura_general.png"),
width = 10, height = 6)
# Total de capturas desagregado
# Procesamiento
for(i in 6:11) {
df_data2 <- df_microdatos3 %>%
filter(mes == i) %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()
) %>%
filter(!is.na(estado)) %>%
drop_na()
# Por día, mes, estado y responsable
ggplot(
# Datos
df_data2 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-10-31")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = paste0("Total de observaciones capturadas por mes ", i),
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 11/11/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Tema
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig(paste0("02_captura_estado_fecha_persona_", i, ".png")),
width = 10, height = 6)
}
# Total de capturas desagregado
# Procesamiento
for(i in 6:11) {
df_data2 <- df_microdatos3 %>%
filter(mes == i) %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()
) %>%
filter(!is.na(estado)) %>%
drop_na()
# Por día, mes, estado y responsable
ggplot(
# Datos
df_data2 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = paste0("Total de observaciones capturadas por mes ", i),
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 11/11/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Tema
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig(paste0("02_captura_estado_fecha_persona_", i, ".png")),
width = 10, height = 6)
}
# Total de capturas desagregado
# Procesamiento
for(i in 6:11) {
df_data2 <- df_microdatos3 %>%
filter(mes == i) %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()
) %>%
filter(!is.na(estado)) %>%
drop_na()
# Por día, mes, estado y responsable
ggplot(
# Datos
df_data2 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = paste0("Total de observaciones capturadas por mes ", i),
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 11/11/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Tema
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig(paste0("02_captura_estado_fecha_persona_", i, ".png")),
width = 10, height = 6)
}
ggplot(
# Datos
df_data1 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = "Total de observaciones capturadas para el Monitor PPD de junio a noviembre",
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 10/11/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Temas
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig("01_captura_general.png"),
width = 10, height = 6)
# Total de capturas desagregado
# Procesamiento
for(i in 6:11) {
df_data2 <- df_microdatos3 %>%
filter(mes == i) %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()
) %>%
filter(!is.na(estado)) %>%
drop_na()
# Por día, mes, estado y responsable
ggplot(
# Datos
df_data2 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = paste0("Total de observaciones capturadas por mes ", i),
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 10/11/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Tema
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig(paste0("02_captura_estado_fecha_persona_", i, ".png")),
width = 10, height = 6)
}
