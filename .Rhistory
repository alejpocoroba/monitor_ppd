cuerpo_lugar2 %in% v_nego              ~ "negocio",
cuerpo_lugar2 %in% v_parque            ~ "parque/jardín/espacio público",
cuerpo_lugar2 %in% v_comida            ~ "puesto de comida/restaurante/taquería",
cuerpo_lugar2 %in% v_entretenimiento   ~ "sitio de entretenimiento",
cuerpo_lugar2 %in% v_meca              ~ "taller mecánico/vulcanizadora/lavacoches",
cuerpo_lugar2 %in% v_taxi              ~ "taxi/transporte público",
cuerpo_lugar2 %in% v_abarrotes         ~ "tienda de abarrotes/mercado/venta de comida",
cuerpo_lugar2 %in% v_vehiculo          ~ "vehículo",
cuerpo_lugar2 %in% v_alcohol           ~ "venta de alcohol",
cuerpo_lugar2 %in% v_consumo           ~ "venta/distribución/consumo sustancias/centro de rehabilitación",
cuerpo_lugar1 %in% v_agua              ~ "río/tuberia/canales de agua",
cuerpo_lugar1 %in% v_otro1             ~ "otro",
cuerpo_lugar2 ==   cuerpo_lugar2       ~ cuerpo_lugar2))
unique(df_c$cuerpo_lugar1)
unique(df_c$cuerpo_lugar2)
### 3.7. Ataque-----------------------------------------------------------------
# separar valores
df_semicolon2 <- df_c %>%
mutate(
# Reemplazar casos donde haya dos puntos (:) por punto y coma (;)
ataque_armado_clean = str_replace_all(ataque_armado_clean, ":", ";"),
# Contar número de puntos y comas (;)
semicolon2 = str_count(ataque_armado_clean, ";")) %>%
select(semicolon2)
max(df_semicolon2$semicolon2, na.rm = T) # El máximo es 3
df_ata <- df_c %>%
mutate(ataque_armado_clean = str_replace_all(ataque_armado_clean, ":", ";")) %>%
separate(ataque_armado_clean, sep = ";", c("ataque1",
"ataque2",
"ataque3"))
unique(df_ata$ataque1)
unique(df_ata$ataque2)
unique(df_ata$ataque3)
# clasificación - vector
va_blanca <- c("arma blanca","asalto con arma blanca", "asfixia",
"degollación", "lapidación", "estrangulación", "Poncha llantas",
"Ponchallantas", "martillazos", " arma blanca", " arma blanca")
va_fuego <- c("arma de fuego", "disparos a casa habitación", "disparos al aire", "detonaciones",
"disparos",  "agresión", "agresión a comercio", "agresión a vehiculo",
"agresión a vivienda", "agresión a vivienda; agresión a vehículo",
"arma de fuego; agresión a policías", "arma de fuego; secuetro",
"asalto con arma de fuego", "Bala perdida", "disparos (en general)",
"disparos a automóvil", "disparos a cámaras de vigilancia",
"disparos a comercio", "fachada baleada", "presunto feminicidio",
"billar", "secuestro armado", "levantón armado",
"agresión a vehículo", " arma de fuego", " agresión a policías",
" agresión a vehículo", " agresión a policías")
va_balacera <- c("balacera", "tiroteo")
va_enfrentamiento <- c("enfrentamiento")
va_incendio <- c("bomba molotov", "incendio de casa", "incendio de auto",
"incendio de local", "incendio de vehículo", "arma explosiva",
"incendio", "incendio provocado", "Narcobloqueos", "bomba",
"incendiado", " incendiado")
va_fseguridad <- c("desalojo", "persecución")
va_persecucion <- c("persecución")
va_rina <- c("golpes", "riña", "golpes/riña", "riña; arma blanca",
"riña; arma de fuego", "riña; arma de fuego; agresión a policías",
"linchamiento")
va_otro <- c("robo", "asalto", "narcotizado", "robo de autos",
"robo de vehículo", " atropellamiento intencional")
# Limpiar nombres
df_ata <- df_ata %>%
mutate(ataque1 =
case_when(ataque1 %in% va_blanca             ~ "agresión con arma blanca",
ataque1 %in% va_fuego              ~ "agresión con arma de fuego",
ataque1 %in% va_balacera           ~ "balacera",
ataque1 %in% va_enfrentamiento     ~ "enfrentamiento",
ataque1 %in% va_incendio           ~ "incendio/explosión",
ataque1 %in% va_fseguridad         ~ "intervención fuerzas de seguridad",
ataque1 %in% va_persecucion        ~ "persecución",
ataque1 %in% va_rina               ~ "riña",
ataque1 %in% va_otro               ~ "otro",
ataque1 ==   ataque1               ~ ataque1),
ataque2 =
case_when(ataque2 %in% va_blanca             ~ "agresión con arma blanca",
ataque2 %in% va_fuego              ~ "agresión con arma de fuego",
ataque2 %in% va_balacera           ~ "balacera",
ataque2 %in% va_enfrentamiento     ~ "enfrentamiento",
ataque2 %in% va_incendio           ~ "incendio/explosión",
ataque2 %in% va_fseguridad         ~ "intervención fuerzas de seguridad",
ataque2 %in% va_persecucion        ~ "persecución",
ataque2 %in% va_rina               ~ "riña",
ataque2 %in% va_otro               ~ "otro",
ataque2 ==   ataque2               ~ ataque2),
ataque3 =
case_when(ataque3 %in% va_blanca             ~ "agresión con arma blanca",
ataque3 %in% va_fuego              ~ "agresión con arma de fuego",
ataque3 %in% va_balacera           ~ "balacera",
ataque3 %in% va_enfrentamiento     ~ "enfrentamiento",
ataque3 %in% va_incendio           ~ "incendio/explosión",
ataque3 %in% va_fseguridad         ~ "intervención fuerzas de seguridad",
ataque3 %in% va_persecucion        ~ "persecución",
ataque3 %in% va_rina               ~ "riña",
ataque3 %in% va_otro               ~ "otro",
ataque3 ==   ataque3               ~ ataque3))
unique(df_ata$ataque1)
unique(df_ata$ataque2)
unique(df_ata$ataque3)
# Corrección de valores duplicados
df_ata <- df_ata %>%
mutate(ataque3 =ifelse(ataque3=="agresión con arma de fuego",NA, ataque3))
### 3.7. Lugar de ataque--------------------------------------------------------
# separar valores con más opciones
df_semicolon3 <- df_ata %>%
mutate(
# Reemplazar casos donde haya dos puntos (:) por punto y coma (;)
lugar_ataque_clean = str_replace_all(lugar_ataque_clean, ":", ";"),
# Contar número de puntos y comas (;)
lugar_ataque_clean = str_count(lugar_ataque_clean, ";")) %>%
select(lugar_ataque_clean)
max(df_semicolon3$lugar_ataque_clean, na.rm = T) # El máximo es 1
df_lu <- df_ata %>%
mutate(lugar_ataque_clean = str_replace_all(lugar_ataque_clean, ":", ";")) %>%
separate(lugar_ataque_clean, sep = ";", c("lugar_ataque1",
"lugar_ataque2"))
unique(df_lu$lugar_ataque1)
unique(df_lu$lugar_ataque2)
# clasificación - vector
v_adomicilio2 <- c("afuera de domicilio")
v_aestablecimiento2 <- c("afuera de escuela", "afuera de negocio",
"afuera de oficina", "afuera de un panteón",
"afuera de bar", "afuera de mercado", "afuera de velorio",
"transmisores de cámaras de seguridad")
v_baldio2 <- c("basurero", "Calle", "campo", "canal de aguas negras", "Ejido",
"finca", "Lote baldío", "montaña", "obra negra", "paraje",
"pozo", "rancho", "río", "terreno", "terreo baldío", "zona boscosa")
v_banco2 <- c("banco", "cajero")
v_barbe2 <- c("barbería")
v_calle2 <- c("calle", "camino", "camino de terracería", " calle")
v_campo2 <- c("campo de fútbol", "canchas de fútbol", "Unidad deportiva")
v_carretera2 <- c("carretera", "vías del tren")
v_iglesia2 <- c("iglesia")
v_domicilio2 <- c("casa", "Domicilio", "jacal", "vivienda", "vivienda de comerciante", "obra", "cuartería")
v_estacionamiento2 <- c("estacionamiento", "estacionamiento de bar", "estacionamiento supermercado")
v_fiesta2 <- c("fiesta", "salón de fiestas")
v_gas2 <- c("gasolinera", " gasera", "gasolineria")
v_hosp2 <- c("hospital", "clínica")
v_gub2 <- c("Centro penitenciario", "cereso", "escuela", "estación de bomberos",
"estación de tren", "institución pública", "ministerio público", "oficina de gobierno", "comandancia",
"retén", "afuera de campo militar", "afuera de cereso")
v_local2 <- c("centro comercial", "comercio", "comercio", "gasera", "comercio", "purificadora de agua",
"local comercial", "sitio de taxis", "Taller de Herrería", "trituradora", "verificentro", " purificadora de agua")
v_nego2 <- c("base de taxis", "bodega","cabañas", "carpintería", "expendio", "funeraria",
"hotel", "ladrilleras", "motel", "Negocio", "negocio", "laboratorio", "recicladora",
" laboratorio", "farmacia", "plaza de ganado", "pizzería", "corral",
"Billar", "forrajera", "caballerizas")
v_parque2 <- c("área verde", "huerta", "jardín", "Parque", "a orilla de un río")
v_comida2 <-c("cafetería", "restaurante", "taquería", "cenaduría")
v_entretenimiento2 <- c("carrera de caballos", "casino", "local de maquinitas", "negocio de maquinas tragamodenas",
"negocio de maquinitas", "palenque", "playa", "Rodeo", "jaripeo", "plaza principal", "plaza",
"plaza comercial")
v_meca2 <- c("autolavado", "refaccionaria", "taller mecánico",
"taller de motos", "taller mecánico", " refaccionaria", "vulcanizadora")
v_taxi2 <- c("Central camionera", "transporte público", " taxi", " taller mecánico")
v_abarrotes2 <- c("carnicería", "mercado", "negocio de comida", "negocio: fruteria", " fruteria", "oxxo", "puesto ambulante",
"tianguis", "tienda", "tortillería")
v_vehiculo2 <- c("tráiler", "vehículo", "vehiculo", " vehículo", " motocicleta", " autobús", "auto", "agresión a vehículo")
v_alcohol2 <- c("bar", "bar/pulquería", "Cantina", "comercio", "depósito de cerveza",
"depósito de cerveza", "vinateria", " depósito de cerveza")
v_consumo2 <- c("albergue", "anexo", "campo de cultivo",
"centro de rehabilitación", "punto de venta de droga", " picadero",
"picadero", "centro rehabilitación")
# Limpiar nombres
df_lu <- df_lu %>%
mutate(lugar_ataque1 =
case_when(lugar_ataque1 %in% v_adomicilio2         ~ "afuera de domicilio",
lugar_ataque1 %in% v_aestablecimiento2   ~ "afuera de establecimiento",
lugar_ataque1 %in% v_baldio2             ~ "baldío/maleza/terreno",
lugar_ataque1 %in% v_banco2              ~ "banco",
lugar_ataque1 %in% v_barbe2              ~ "barbería/salón de belleza/estética",
lugar_ataque1 %in% v_calle2              ~ "calle",
lugar_ataque1 %in% v_campo2              ~ "campo deportivo",
lugar_ataque1 %in% v_carretera2          ~ "carretera",
lugar_ataque1 %in% v_iglesia2            ~ "comunidad/religión",
lugar_ataque1 %in% v_domicilio2          ~ "domicilio",
lugar_ataque1 %in% v_estacionamiento2    ~ "estacionamiento",
lugar_ataque1 %in% v_fiesta2             ~ "fiesta/salón de fiestas",
lugar_ataque1 %in% v_gas2                ~ "gasolinera",
lugar_ataque1 %in% v_hosp2               ~ "hospital/consultorio",
lugar_ataque1 %in% v_gub2                ~ "instancia gubernamental",
lugar_ataque1 %in% v_local2              ~ "local comercial",
lugar_ataque1 %in% v_nego2               ~ "negocio",
lugar_ataque1 %in% v_parque2             ~ "parque/jardín/espacio público",
lugar_ataque1 %in% v_comida2             ~ "puesto de comida/restaurante/taquería",
lugar_ataque1 %in% v_entretenimiento2    ~ "sitio de entretenimiento",
lugar_ataque1 %in% v_meca2               ~ "taller mecánico/vulcanizadora/lavacoches",
lugar_ataque1 %in% v_taxi2               ~ "taxi/transporte público",
lugar_ataque1 %in% v_abarrotes2          ~ "tienda de abarrotes/mercado/venta de comida",
lugar_ataque1 %in% v_vehiculo2           ~ "vehículo",
lugar_ataque1 %in% v_alcohol2            ~ "venta de alcohol",
lugar_ataque1 %in% v_consumo2            ~ "venta/distribución/consumo sustancias/centro de rehabilitación",
lugar_ataque1 ==   lugar_ataque1         ~ lugar_ataque1),
lugar_ataque2 =
case_when(lugar_ataque2 %in% v_adomicilio2         ~ "afuera de domicilio",
lugar_ataque2 %in% v_aestablecimiento2   ~ "afuera de establecimiento",
lugar_ataque2 %in% v_baldio2             ~ "baldío/maleza/terreno",
lugar_ataque2 %in% v_banco2              ~ "banco",
lugar_ataque2 %in% v_barbe2              ~ "barbería/salón de belleza/estética",
lugar_ataque2 %in% v_calle2              ~ "calle",
lugar_ataque2 %in% v_campo2              ~ "campo deportivo",
lugar_ataque2 %in% v_carretera2          ~ "carretera",
lugar_ataque2 %in% v_iglesia2            ~ "comunidad/religión",
lugar_ataque2 %in% v_domicilio2          ~ "domicilio",
lugar_ataque2 %in% v_estacionamiento2    ~ "estacionamiento",
lugar_ataque2 %in% v_fiesta2             ~ "fiesta/salón de fiestas",
lugar_ataque2 %in% v_gas2                ~ "gasolinera",
lugar_ataque2 %in% v_hosp2               ~ "hospital/consultorio",
lugar_ataque2 %in% v_gub2                ~ "instancia gubernamental",
lugar_ataque2 %in% v_local2              ~ "local comercial",
lugar_ataque2 %in% v_nego2               ~ "negocio",
lugar_ataque2 %in% v_parque2             ~ "parque/jardín/espacio público",
lugar_ataque2 %in% v_comida2             ~ "puesto de comida/restaurante/taquería",
lugar_ataque2 %in% v_entretenimiento2    ~ "sitio de entretenimiento",
lugar_ataque2 %in% v_meca2               ~ "taller mecánico/vulcanizadora/lavacoches",
lugar_ataque2 %in% v_taxi2               ~ "taxi/transporte público",
lugar_ataque2 %in% v_abarrotes2          ~ "tienda de abarrotes/mercado/venta de comida",
lugar_ataque2 %in% v_vehiculo2           ~ "vehículo",
lugar_ataque2 %in% v_alcohol2            ~ "venta de alcohol",
lugar_ataque2 %in% v_consumo2            ~ "venta/distribución/consumo sustancias/centro de rehabilitación",
lugar_ataque2 ==   lugar_ataque2         ~ lugar_ataque2))
unique(df_lu$lugar_ataque1)
unique(df_lu$lugar_ataque2)
### 3.8 Actividad-----------------------------------------------------------------
# separar valores con más opciones
df_actsemicolon <- df_lu %>%
mutate(
# Reemplazar casos donde haya dos puntos (:) por punto y coma (;)
actividad_grupo = str_replace_all(actividad_grupo, ":", ";"),
# Contar número de puntos y comas (;)
actividad_grupo = str_count(actividad_grupo, ";")) %>%
select(actividad_grupo)
max(df_actsemicolon$actividad_grupo, na.rm = T) # El máximo es 1
df_act <- df_lu %>%
mutate(actividad_grupo = str_replace_all(actividad_grupo, ":", ";")) %>%
separate(actividad_grupo, sep = ";", c("actividad_grupo1",
"actividad_grupo2"))
unique(df_act$actividad_grupo1)
unique(df_act$actividad_grupo2)
# clasificación - vector
vact_agresion <- c("Agresiones", "Desalojo", "disparos")
vact_extorison <- c("cobro de piso", "halcón",
"extorsión", " cobro de piso")
vact_enfrentamiento <- c("Enfrentamiento")
vact_noviolenta <- c("narcofiesta", "Presencia no violenta",
"Entrega de juguetes", "préstamos",
"entrega de secuestradores")
vact_amenaza <- c("toque de queda", "amenaza")
vact_secuestro <- c("secuestro","Tráfico de personas")
vact_psinespecificar <- c("Presencia (sin especificar)", "presencia",
"presencia (varios)")
vact_labycamp <- c("laboratorio","campamento", "reclutamiento")
vact_fseguridad <- c("desmantelamiento cédula criminal", "detención",
"Decomiso")
vact_coru_rob <- c("lavado de dinero", "robo", "contubernio")
vact_sustancias <- c("Sustancias ilícitas", " tráfico de sustancias",
"  tráfico de sustancias")
vact_armas <- c("tráfico de armas")
# Limpiar nombres
df_act <- df_act %>%
mutate(actividad_grupo1 =
case_when(actividad_grupo1 %in% vact_agresion        ~ "agresión",
actividad_grupo1 %in% vact_extorison       ~ "vigilancia/extorsión",
actividad_grupo1 %in% vact_enfrentamiento  ~ "enfrentamiento",
actividad_grupo1 %in% vact_noviolenta      ~ "presencia no violenta",
actividad_grupo1 %in% vact_amenaza         ~ "amenazas",
actividad_grupo1 %in% vact_secuestro       ~ "privación de la libertad",
actividad_grupo1 %in% vact_psinespecificar ~ "presencia sin especificar",
actividad_grupo1 %in% vact_labycamp        ~ "laboratorios/campamento/reclutamiento",
actividad_grupo1 %in% vact_fseguridad      ~ "intervenciones gubernamentales",
actividad_grupo1 %in% vact_coru_rob        ~ "corrupción/robo",
actividad_grupo1 %in% vact_sustancias      ~ "sustancias ilegales",
actividad_grupo1 %in% vact_armas           ~ "tráfico de armas",
actividad_grupo1 ==   actividad_grupo1     ~ actividad_grupo1),
actividad_grupo2 =
case_when(actividad_grupo2 %in% vact_agresion        ~ "agresión",
actividad_grupo2 %in% vact_extorison       ~ "vigilancia/extorsión",
actividad_grupo2 %in% vact_enfrentamiento  ~ "enfrentamiento",
actividad_grupo2 %in% vact_noviolenta      ~ "presencia no violenta",
actividad_grupo2 %in% vact_amenaza         ~ "amenazas",
actividad_grupo2 %in% vact_secuestro       ~ "privación de la libertad",
actividad_grupo2 %in% vact_psinespecificar ~ "presencia sin especificar",
actividad_grupo2 %in% vact_labycamp        ~ "laboratorios/campamento/reclutamiento",
actividad_grupo2 %in% vact_fseguridad      ~ "intervenciones gubernamentales",
actividad_grupo2 %in% vact_coru_rob        ~ "corrupción/robo",
actividad_grupo2 %in% vact_sustancias      ~ "sustancias ilegales",
actividad_grupo2 %in% vact_armas           ~ "tráfico de armas",
actividad_grupo2 ==   actividad_grupo2     ~ actividad_grupo2))
unique(df_act$actividad_grupo1)
unique(df_act$actividad_grupo2)
# 4. ID y orden
df_act <- df_act %>%
mutate(id = 1:length(df_act$Mes))
m_2023 <- df_act %>%
select("id"                     = "id",
"fecha_de_publicacion"   = "fecha_de_publicacion",
"mes"                    = "Mes",
"dia"                    = "Dia",
"anio"                   = "Anio",
"fecha_hechos"           = "fecha_hechos",
"enlace"                 = "Enlace",
"titulo_de_la_nota"      = "titulo_de_la_nota",
"nombre_de_la_fuente"    = "nombre_de_la_fuente",
"enlace_otras_notas"     = "enlace_otras_notas",
"estado"                 = "Estado",
"municipio"              = "Municipio",
"CVEGEO_ent"             = "CVEGEO_ent",
"CVEGEO_mun"             = "CVEGEO_mun",
"CVEGEO"                 = "CVEGEO",
"lugar"                  = "Lugar",
"grupo1"                 = "grupo1",
"grupo2"                 = "grupo2",
"alianza1"               = "alianza1",
"alianza2"               = "alianza2",
"alianza3"               = "alianza3",
"alianza4"               = "alianza4",
"alianza5"               = "alianza5",
"rival1"                 = "rival1",
"rival2"                 = "rival2",
"actividad_grupo1"       = "actividad_grupo1",
"actividad_grupo2"       = "actividad_grupo2",
"narcomensaje"           = "Narcomensaje",
"contenido_narcomensaje" = "contenido_narcomensaje",
"homic_total"            = "homic_total",
"homic_hombre"           = "homic_hombre",
"homic_mujer"            = "homic_mujer",
"homic_clasif1"          = "homic_clasif1",
"homic_clasif2"          = "homic_clasif2",
"cuerpos_localizados"    = "cuerpos_localizados",
"cuerpo_modo1"           = "cuerpo_modo1",
"cuerpo_modo2"           = "cuerpo_modo2",
"cuerpo_lugar1"          = "cuerpo_lugar1",
"cuerpo_lugar2"          = "cuerpo_lugar2",
"heridos_total"          = "heridos_total",
"heridos_hombre"         = "heridos_hombre",
"heridos_mujeres"        = "heridos_mujeres",
"herido_clasif1"         = "herido_clasif1",
"herido_clasif2"         = "herido_clasif2",
"ataque1"                = "ataque1",
"ataque2"                = "ataque2",
"ataque3"                = "ataque3",
"lugar_ataque1"          = "lugar_ataque1",
"lugar_ataque2"          = "lugar_ataque2",
"politica_de_seguridad"  = "politica_de_seguridad")
# Detalles
# Reemplazar mayusculas
m_2023 <- m_2023 %>%
mutate_at(.vars = c("nombre_de_la_fuente",
"actividad_grupo1", "actividad_grupo2",
"contenido_narcomensaje", "homic_clasif1",
"homic_clasif2", "cuerpo_modo1", "cuerpo_modo2",
"cuerpo_lugar1", "cuerpo_lugar2", "herido_clasif1",
"herido_clasif2", "ataque1", "ataque2", "ataque3",
"lugar_ataque1", "lugar_ataque2"),
.funs = ~str_to_lower(.))
# 4. Base limpía----------------------------------------------------------------
openxlsx::write.xlsx(m_2023,
file = paste_out("m_ene_mar_23_lim.xlsx"))
# Fin---------------------------------------------------------------------------
beepr::beep(9)
#------------------------------------------------------------------------------#
# Proyecto:                   Monitor PPD 2023
# Objetivo:                   Reporte de desempeño: captura de notas
#
# Encargado:                  Alejandro Pocoroba
# Correo:                     alejandro.pocoroba@cide.edu
# Fecha de creación:          19 de enero de 2023
# Última actualización:       26 de mayo de 2023
#------------------------------------------------------------------------------#
# Fuente: Monitor PPD versión 2023
# 0. Configuración inicial -----------------------------------------------------
# Silenciar mensajes de .group en dplyr
options(dplyr.summarise.inform = FALSE)
# Librerías
require(pacman)
p_load(
readxl, tidyverse, dplyr, srvyr, zoo, ggtext, beepr)
# Limpiar espacio de trabajo
rm(list=ls())
# Funciones con direcciones de las carpetas
paste_inp <- function(x){paste0("02_datos_crudos/" , x)}
paste_out <- function(x){paste0("03_datos_limpios/", x)}
paste_fig <- function(x){paste0("04_figuras/"      , x)}
# 1. Cargar datos --------------------------------------------------------------
# abril al día 20
c <- read_xlsx(paste_inp("monitor_abril_2023.xlsx"))
b <- read_xlsx(paste_inp("monitor_mayo_2023.xlsx"))
# Se unen bases
a <- c %>% bind_rows(b)
# 2. Procesamiento
# limpiar nombres de microdatos
df_ <- a %>%
janitor::clean_names() %>%
select("responsable" = "responsable",
"publicacion" = "fecha",
"estado"      = "estado") %>%
# modificaciones sobre fecha: mes
mutate(mes = lubridate::month(publicacion)) %>%
mutate(
id_entidad = str_extract_all(estado, "[:digit:]"))
# 3. Cifras de captura ---------------------------------------------------
## Periodo junio a noviembre----
# Total de observaciones
paste0("Número total de observaciones al 26 de mayo 2023: ", dim(df_)[1])
# Total de obsveraciones por mes
table(df_$mes)
# Total de observaciones por responsable
table(df_$responsable)
# Porcentajes
# Porcentaje por responsable
df_responsable <- df_ %>%
group_by(responsable) %>%
summarise(notas = n()) %>%
ungroup() %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
# Porcentje por responsable y mes
df_responsable_mes <- df_ %>%
group_by(mes, responsable) %>%
summarise(notas = n()) %>%
ungroup() %>%
group_by(mes) %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
# Porcentaje por estado
df_entidad<- df_ %>%
group_by(estado) %>%
summarise(notas = n()) %>%
ungroup() %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
# 4. Figuras-----
## Capturas general----
# procesamiento
df_data1 <- df_ %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()) %>%
filter(!is.na(estado)) %>%
drop_na()  %>%
# Agregar variable de mes para facilitar filtros de fechas
mutate(mes = lubridate::month(publicacion, label = TRUE))
# Por estado, publicación y responsable
ggplot(
# Datos
df_data1,
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = "Total de observaciones capturadas para el Monitor PPD en 2023",
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 26/05/23 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Temas
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig("01_captura_general_2023.png"),
width = 10, height = 6)
# Meses - 2023
## Captura desagregado----
# Procesamiento
for(i in 4:5) {
df_data <- df_ %>%
filter(mes == i) %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()
) %>%
filter(!is.na(estado)) %>%
drop_na()
# Por día, mes, estado y responsable
ggplot(
# Datos
df_data,
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = paste0("Total de observaciones capturadas por mes ", i),
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 26/05/23 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Tema
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig(paste0("02_captura_estado_fecha_persona_", i, ".png")),
width = 10, height = 6)
}
# Fin
