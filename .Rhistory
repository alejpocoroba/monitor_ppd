homic_clasif1 = str_count(homic_clasif1, ";")) %>%
select(homic_clasif1)
max(df_phcolon$homic_clasif1, na.rm = T) # El máximo es 2
df_p <- df_gc %>%
mutate(homic_clasif1 = str_replace_all(homic_clasif1, ":", ";")) %>%
separate(homic_clasif1, sep = ";", c("homic_clasif1",
"homic_clasif2"))
unique(df_p$homic_clasif1)
unique(df_p$homic_clasif2)
# herdxs
df_phecolon <- df_gc %>%
mutate(
# Reemplazar casos donde haya dos puntos (:) por punto y coma (;)
heridos_clasif1 = str_replace_all(heridos_clasif1, ":", ";"),
# Contar número de puntos y comas (;)
heridos_clasif1 = str_count(heridos_clasif1, ";")) %>%
select(heridos_clasif1)
max(df_phecolon$heridos_clasif1, na.rm = T) # El máximo es 1
df_p <- df_p %>%
mutate(heridos_clasif1 = str_replace_all(heridos_clasif1, ":", ";")) %>%
separate(heridos_clasif1, sep = ";", c("herido_clasif1",
"herido_clasif2"))
unique(df_p$herido_clasif1)
unique(df_p$herido_clasif2)
# clasificación - vector
v_adulto_mayor <- c("adultos mayores", "tercera edad")
v_campesino <- c("campesino", "cultivador de aguacate")
v_ex_fuerzas_de_seguridad <- c("ex policía", "exmilitar", "Exagente de FGE",
"ex militar", "expolicía")
v_ex_funcionario_público <- c("exdirigente de partido","Exfuncionario público",
"ex-síndico", "ex diputado", "Exdirigente del PRD",
"ex-alcalde", "ex alcalde y colaboradores",
"ex funcionario")
v_fseguridad <- c(" Policía Penitenciaria", "comandante de policía municipal",
"elemento de la Guardia Nacional", "Guardia Nacional", "marino",
"Militar", "militar", "policia", "policía auxiliar",
"policía bancaria", "policía de tránsito", "Policía estatal",
"polícia estatal", "Policía Estatal Preventiva (PEP)",
"policía estatal", "policía fiscalia", "policía investigación",
"policía ministerial", "policía municipal", "polícia transito",
"policía y bombero", "un municipal", "dos estatales", " un militar",
"Policía Penitenciaria.", "funcionario público",
"elemento de la Guardia Nacional ", "un policía", " un ministerial",
" dos estatales", "agente AIC-UECS",
"Comandante de la Policía de investigación", "policía comunitario",
"dos policias", "polícia", "Policía Metropolitana",
"agente de la FGE", "autoridad policial",
"guardia nacional", "dos policías", "agente", "semar",
"agentes de tránsito", " exagente de la FGE",
" Guardia Nacional")
v_fpublico <- c("comisariado", "comisariado ejidal",
"comisario suplente de la comunidad", "delegado",
"empleado municipal", "Fiscalía Estatal",
"funcionario público",
"representante de Bienes Comunales de comunidad indígena",
"servidor público municipal", "síndico",
" delegado de la comunidad", "sindicalistas", "cfe", "comisario",
"líder de unión nacional de transportistas del cambio", "líder cañero")
v_menor <- c("menor de edad", "un menor de edad", "2 menor de edad",
"1 menor de edad", " 2 menores de edad", " un menor de edad",
" 2 menor de edad", "menor de edad", " 1 menor de edad",
"una menor de edad", "dos menores")
v_moto <- c("motociclista", "motociclistas", "mototaxista")
v_pepenador <- c("pepenador")
v_criminal <- c("agresor", "cuatro sicarios",
"exintegrante de grupo criminal", "Gatilleros", "grupo criminal",
"huachicoleros", "ladrón",
"líder narcomenudista Abraham de Jesús H. C., alias El Croquis",
"Narcomenudista", "presunto agresor", "presunto criminal",
"Salvador Navarro Peñaloza El Zarco", "alias El Yofos",
"Sicario", " 6 grupo criminal", " sicario", " dos delincuentes",
" asaltante", " grupo del crimen organizado", "ocho sicarios",
"delincuente", "asaltante", "narcodistribuidor", "presunto ladrón",
"presunto asaltante", "miembros de célula delictiva",
"presunto delincuente", "presunto narcomenudista", "pandilla")
v_general <- c("desaparecidos", "deparecido", "Ex presidiario", "familia",
"hermano de edil", "hijo de dueño de negocio",
"Integrantes de Ronda comunitaria", "menonitas", "MULT",
"padre e hijo", "pareja", "pasajero", "Sacerdote",
"Sin especificar", "sin especificar", " desaparecido", " desparecido",
" pasajero", " desaparecida", "desaparecido", "estudiante", "Miembro de los Loreto",
"Hermano de expresidente municipal", "cliente de negocio", "ciclista",
"exconvicto", "Cholo", "civil", "talamontes", " dos hermanos", "pasajero de taxi",
"civíl", " civil", " acompañante")
v_lgbt <- c("transexual", "población lgbt")
v_ppl <- c("persona privada de la libertad", "presidiario",
"privado de la libertad", "recluso", " ppl", " secuestrado",
"interno centro de rehabilitación", "detenido", "secuestrados",
"secuestrado", "personas privadas de la libertad")
v_profesionista <- c("abogado", "abogado", "arquitecto", "doctor",
"empresario", "enfermera", "gerente",
"hotelero", "Profesor", "profesora", "periodista",
"Hotelero", "maestro", "profesor", "maestra",
"profesional de la salud")
v_sprivada <- c("custodio centro de rehabilitación", "custodios",
"guardaespaldas", "guardia de seguridad", "velador",
"custodio", "escolta de autodefensa", " escolta")
v_calle <- c("condición de calle", "indigente", "persona en situación de calle")
v_taxi <- c("chofer de aplicación", "conductor de plataforma",
"taxista", "taxista", "trailero", "transportista", " chofer",
" taxista", "uber", "chofer", "líder de taxistas",
"taxi/chofer", "un taxista")
v_trabajador <- c("albañil", "ama de casa", "artesano",
"ayudante de hojalatería", "bolillero", "Carnicero",
"checador", "contratista", "despachadores de gasolina",
"dueño de autolavado", "dueño de bar", "dueño de local",
"empleado de tienda", "ganadero", "jardinero", "jornalero",
"lavacoches", "líder de transportistas y de comerciantes",
"limpiaparabrisas", "mecánico", "mesero", "obrero", "panadero",
"pescadores", "Propietario de negocio", "talachero",
"tamalero", "taquero", "trabajador", "empleado de hotel",
"vendedora", "despachador", "barbero", "empleado", "comerciante",
"repartidor", "vendedora ambulante", "beisbolista",
"scort", "capataz", "músico", "chatarrero", "Integrante grupo de Danza",
"repartidor de agua", "empleado de autolavado", "dueño",
"carpintero", "Dueño de negocio", "vendedor de pan",
" empleado de bar", " empleada de comercio")
v_migrante <- c("migrante")
# Limpiar nombres
df_p <- df_p %>%
mutate(homic_clasif1 =
case_when(homic_clasif1 %in% v_adulto_mayor               ~ "adulto mayor",
homic_clasif1 %in% v_campesino                  ~ "campesino",
homic_clasif1 %in% v_ex_fuerzas_de_seguridad    ~ "ex fuerzas de seguridad",
homic_clasif1 %in% v_ex_funcionario_público     ~ "ex funcionario público",
homic_clasif1 %in% v_fseguridad                 ~ "fuerzas de seguridad",
homic_clasif1 %in% v_fpublico                   ~ "funcionario público",
homic_clasif1 %in% v_menor                      ~ "menor de edad",
homic_clasif1 %in% v_moto                       ~ "motociclista",
homic_clasif1 %in% v_pepenador                  ~ "pepenador",
homic_clasif1 %in% v_criminal                   ~ "población criminal",
homic_clasif1 %in% v_general                    ~ "población en general",
homic_clasif1 %in% v_lgbt                       ~ "población lgbt",
homic_clasif1 %in% v_ppl                        ~ "población privada de la libertad",
homic_clasif1 %in% v_profesionista              ~ "profesionista",
homic_clasif1 %in% v_sprivada                   ~ "seguridad privada",
homic_clasif1 %in% v_calle                      ~ "situación de calle",
homic_clasif1 %in% v_ppl                        ~ "población privada de la libertad",
homic_clasif1 %in% v_taxi                       ~ "taxi/chofer",
homic_clasif1 %in% v_trabajador                 ~ "trabajador",
homic_clasif1 %in% v_migrante                   ~ "migrante",
homic_clasif1 ==   homic_clasif1                ~ homic_clasif1),
homic_clasif2 =
case_when(homic_clasif2 %in% v_adulto_mayor             ~ "adulto mayor",
homic_clasif2 %in% v_campesino                ~ "campesino",
homic_clasif2 %in% v_ex_fuerzas_de_seguridad  ~ "ex fuerzas de seguridad",
homic_clasif2 %in% v_ex_funcionario_público   ~ "ex funcionario público",
homic_clasif2 %in% v_fseguridad               ~ "fuerzas de seguridad",
homic_clasif2 %in% v_fpublico                 ~ "funcionario público",
homic_clasif2 %in% v_menor                    ~ "menor de edad",
homic_clasif2 %in% v_moto                     ~ "motociclista",
homic_clasif2 %in% v_pepenador                ~ "pepenador",
homic_clasif2 %in% v_criminal                 ~ "población criminal",
homic_clasif2 %in% v_general                  ~ "población en general",
homic_clasif2 %in% v_lgbt                     ~ "población lgbt",
homic_clasif2 %in% v_ppl                      ~ "población privada de la libertad",
homic_clasif2 %in% v_profesionista            ~ "profesionista",
homic_clasif2 %in% v_sprivada                 ~ "seguridad privada",
homic_clasif2 %in% v_calle                    ~ "situación de calle",
homic_clasif2 %in% v_ppl                      ~ "población privada de la libertad",
homic_clasif2 %in% v_taxi                     ~ "taxi/chofer",
homic_clasif2 %in% v_trabajador               ~ "trabajador",
homic_clasif2 %in% v_migrante                 ~ "migrante",
homic_clasif2 ==   homic_clasif2              ~ homic_clasif2),
herido_clasif1 =
case_when(herido_clasif1 %in% v_adulto_mayor             ~ "adulto mayor",
herido_clasif1 %in% v_campesino                ~ "campesino",
herido_clasif1 %in% v_ex_fuerzas_de_seguridad  ~ "ex fuerzas de seguridad",
herido_clasif1 %in% v_ex_funcionario_público   ~ "ex funcionario público",
herido_clasif1 %in% v_fseguridad               ~ "fuerzas de seguridad",
herido_clasif1 %in% v_fpublico                 ~ "funcionario público",
herido_clasif1 %in% v_menor                    ~ "menor de edad",
herido_clasif1 %in% v_moto                     ~ "motociclista",
herido_clasif1 %in% v_pepenador                ~ "pepenador",
herido_clasif1 %in% v_criminal                 ~ "población criminal",
herido_clasif1 %in% v_general                  ~ "población en general",
herido_clasif1 %in% v_lgbt                     ~ "población lgbt",
herido_clasif1 %in% v_ppl                      ~ "población privada de la libertad",
herido_clasif1 %in% v_profesionista            ~ "profesionista",
herido_clasif1 %in% v_sprivada                 ~ "seguridad privada",
herido_clasif1 %in% v_calle                    ~ "situación de calle",
herido_clasif1 %in% v_ppl                      ~ "población privada de la libertad",
herido_clasif1 %in% v_taxi                     ~ "taxi/chofer",
herido_clasif1 %in% v_trabajador               ~ "trabajador",
herido_clasif1 %in% v_migrante                 ~ "migrante",
herido_clasif1 ==   herido_clasif1             ~ herido_clasif1),
herido_clasif2 =
case_when(herido_clasif2 %in% v_adulto_mayor             ~ "adulto mayor",
herido_clasif2 %in% v_campesino                ~ "campesino",
herido_clasif2 %in% v_ex_fuerzas_de_seguridad  ~ "ex fuerzas de seguridad",
herido_clasif2 %in% v_ex_funcionario_público   ~ "ex funcionario público",
herido_clasif2 %in% v_fseguridad               ~ "fuerzas de seguridad",
herido_clasif2 %in% v_fpublico                 ~ "funcionario público",
herido_clasif2 %in% v_menor                    ~ "menor de edad",
herido_clasif2 %in% v_moto                     ~ "motociclista",
herido_clasif2 %in% v_pepenador                ~ "pepenador",
herido_clasif2 %in% v_criminal                 ~ "población criminal",
herido_clasif2 %in% v_general                  ~ "población en general",
herido_clasif2 %in% v_lgbt                     ~ "población lgbt",
herido_clasif2 %in% v_ppl                      ~ "población privada de la libertad",
herido_clasif2 %in% v_profesionista            ~ "profesionista",
herido_clasif2 %in% v_sprivada                 ~ "seguridad privada",
herido_clasif2 %in% v_calle                    ~ "situación de calle",
herido_clasif2 %in% v_ppl                      ~ "población privada de la libertad",
herido_clasif2 %in% v_taxi                     ~ "taxi/chofer",
herido_clasif2 %in% v_trabajador               ~ "trabajador",
herido_clasif2 %in% v_migrante                 ~ "migrante",
herido_clasif2 ==   herido_clasif2             ~ herido_clasif2))
unique(df_p$homic_clasif1)
unique(df_p$homic_clasif2)
unique(df_p$herido_clasif1)
unique(df_p$herido_clasif2)
### 3.3. Cuerpos----------------------------------------------------------------
# separar valores con más opciones
df_semicolon0 <- df_p %>%
mutate(
# Reemplazar casos donde haya dos puntos (:) por punto y coma (;)
cuerpos_modo1 = str_replace_all(cuerpos_modo1, ":", ";"),
# Contar número de puntos y comas (;)
semicolon0 = str_count(cuerpos_modo1, ";")) %>%
select(semicolon0)
max(df_semicolon0$semicolon0, na.rm = T) # El máximo es 2
df_c <- df_p %>%
mutate(cuerpos_modo1 = str_replace_all(cuerpos_modo1, ":", ";")) %>%
separate(cuerpos_modo1, sep = ";", c("cuerpo_modo1",
"cuerpo_modo2"))
unique(df_c$cuerpo_modo1)
unique(df_c$cuerpo_modo2)
# clasificación - vector
v_armadefuego <- c("Impactos de arma de fuego", "impacto de arma de fuego",
"impactos de arma de fuego", " impacto de armas de fuego",
" impactos de bala", " impacto de arma de fuego",
" impactos de arma de fuego")
v_tortura_maniatado <- c("golpe en la cabeza", "arma blanca", "huellas de tortura",
"huellas de violencia", "Huellas de tortura / cuerpo maniatado",
"colgado", "golpes", "maniatado", "estrangulado", "Huellas de violencia",
"Heridas arma blanca", "ahorcado", "lesión en el cuello",
"huellas de asfixia", "heridas arma blanca", "Huella de tortura",
" tortura", " colgados", " maniatado", " soga en el cuello", " golpes")
v_plastico_encobijado <- c(" bolsa de plastico", " bolsa de plástico", " bolsas plastico",
"Bolsas de plástico / encobijado", "bolsas de plástico",
"encobijado", "cubierto con material", "bolsa de plástico",
"envuelto en una lona", " encobijado")
v_descomposicion <- c("Descomposición / restos óseos / enterrado / fosas",
"restos óseos", "Descomposición", "Osamenta", "enterrado",
"semienterrado", "fosa", " fosa", " cuerpos en descomposición",
"descomposición")
v_calcinado <- c("calcinado", " calcinado", "Calcinado", " Calcinado")
v_desmembrado <- c("Desmembrado / alguna parte del cuerpo", "decapitado",
"degollada", "cabeza","desmembrado", "pie", "degollado",
"maleta", "encajuelados", "mutilado", "en costal",
"extremidad en hielera", "extremidad", "encajuelado",
"entambados", "enmaletado", " hieleras", "restos humanos")
v_otro <- c("Tambo de agua", "Otro", "desnudo", "tinaco", "tambo de agua")
v_sinformación <- c("ojos vendados", "sin información", "cuerpo completo", " cabeza de animal")
# Limpiar nombres
df_c <- df_c %>%
mutate(cuerpo_modo1 =
case_when(cuerpo_modo1 %in% v_armadefuego          ~ "Impactos de arma de fuego",
cuerpo_modo1 %in% v_tortura_maniatado    ~ "Huellas de tortura / cuerpo maniatado",
cuerpo_modo1 %in% v_plastico_encobijado  ~ "Bolsas de plástico / encobijado",
cuerpo_modo1 %in% v_descomposicion       ~ "Descomposición / restos óseos / enterrado / fosas",
cuerpo_modo1 %in% v_calcinado            ~ "Calcinado",
cuerpo_modo1 %in% v_desmembrado          ~ "Desmembrado / alguna parte del cuerpo",
cuerpo_modo1 %in% v_otro                 ~ "Otro",
cuerpo_modo1 %in% v_sinformación         ~ "Sin información",
cuerpo_modo1 ==   cuerpo_modo1           ~ cuerpo_modo1),
cuerpo_modo2 =
case_when(cuerpo_modo2 %in% v_armadefuego          ~ "Impactos de arma de fuego",
cuerpo_modo2 %in% v_tortura_maniatado    ~ "Huellas de tortura / cuerpo maniatado",
cuerpo_modo2 %in% v_plastico_encobijado  ~ "Bolsas de plástico / encobijado",
cuerpo_modo2 %in% v_descomposicion       ~ "Descomposición / restos óseos / enterrado / fosas",
cuerpo_modo2 %in% v_calcinado            ~ "Calcinado",
cuerpo_modo2 %in% v_desmembrado          ~ "Desmembrado / alguna parte del cuerpo",
cuerpo_modo2 %in% v_otro                 ~ "Otro",
cuerpo_modo2 %in% v_sinformación         ~ "Sin información",
cuerpo_modo2 ==   cuerpo_modo2           ~ cuerpo_modo2))
unique(df_c$cuerpo_modo1)
unique(df_c$cuerpo_modo2)
### 3.4. Cuerpos localizado-----------------------------------------------------
unique(df_c$cuerpos_lugar1)
# separar valores
df_semicolon1 <- df_c %>%
mutate(
# Reemplazar casos donde haya dos puntos (:) por punto y coma (;)
cuerpos_lugar1 = str_replace_all(cuerpos_lugar1, ":", ";"),
# Contar número de puntos y comas (;)
semicolon1 = str_count(cuerpos_lugar1, ";")) %>%
select(semicolon1)
max(df_semicolon1$semicolon1, na.rm = T) # El máximo es 1
df_c <- df_c %>%
mutate(cuerpos_lugar1 = str_replace_all(cuerpos_lugar1, ":", ";")) %>%
separate(cuerpos_lugar1, sep = ";", c("cuerpo_lugar1",
"cuerpo_lugar2"))
unique(df_c$cuerpo_lugar1)
unique(df_c$cuerpo_lugar2)
# clasificación - vector
v_adomicilio <- c("afuera de domicilio")
v_aestablecimiento <- c("afuera de escuela", "afuera de negocio",
"afuera de oficina", "afuera de un panteón",
"afuera de bar", "afuera de mercado", "afuera de velorio",
"transmisores de cámaras de seguridad",
"afuera de establecimiento",
"detrás de panteón", "fuera de negocio")
v_baldio <- c("basurero", "Calle", "campo", "Ejido",
"finca", "Lote baldío", "obra negra", "paraje",
"pozo", "rancho", "río", "terreno", "terreo baldío", "zona boscosa",
"terreno baldío", "terracería", "Barranco", "brecha",
"lugar abandonado", "escombros", "tapias", "maleza",
"zona deshabitada", "fosa clandestina",
"terreno baldió", "matorrales", "zona cerril" )
v_banco <- c("banco", "cajero")
v_barbe <- c("barbería")
v_calle <- c("calle", "camino", "camino de terracería", " calle",
"17 calle Poniente y Venustiano Carranza de la colonia 1 de Mayo, a unos 800 metros de la base cangrejo de la Secretaría de Seguridad Pública Municipal.",
"debajo de un puente", "socavon", "zanja", "tambo", "despoblado", "caja de cartón", "puente", " hielera")
v_campo <- c("campo de fútbol", "canchas de fútbol", "Unidad deportiva",
"estadio de béisbol")
v_carretera <- c("carretera", "vías del tren", "entronque", "Carretera", "vías de tren",
"carretera", " carretera")
v_iglesia <- c("iglesia", "terreno de templo", "seminario")
v_domicilio <- c("casa", "Domicilio", "jacal", "vivienda", "vivienda de comerciante", "obra", "cuartería",
"vivienda abandonada", "domicilio en obra negra", "casa abandonada", "casa de seguridad",
" vivienda abandonada")
v_estacionamiento <- c("estacionamiento", "estacionamiento de bar", "estacionamiento supermercado")
v_fiesta <- c("fiesta", "salón de fiestas")
v_gas <- c("gasolinera", " gasera", "gasolineria")
v_hosp <- c("hospital", "clínica")
v_gub <- c("Centro penitenciario", "cereso", "escuela", "estación de bomberos",
"estación de tren", "institución pública", "ministerio público", "oficina de gobierno", "comandancia",
"retén", "afuera de campo militar", "afuera de cereso", "relleno sanitario")
v_local <- c("centro comercial", "comercio", "comercio", "gasera", "comercio", "purificadora de agua",
"local comercial", "sitio de taxis", "Taller de Herrería", "trituradora", "verificentro", " purificadora de agua")
v_nego <- c("base de taxis", "bodega","cabañas", "carpintería", "expendio", "funeraria",
"hotel", "ladrilleras", "motel", "Negocio", "negocio", "laboratorio", "recicladora",
" laboratorio", "farmacia", "plaza de ganado", "pizzería", "corral",
"Billar", "forrajera", "caballerizas", "negocio", "parque ecológico")
v_parque <- c("área verde", "huerta", "jardín", "Parque", "predio rústico", "vivero",
"sembradío", "predio", "sierra", "cerro", "parcela", "Nopalera", "barranca",
"zona rural", "montaña", "parque", "reserva", "bosque", "jardinera", "monte")
v_comida <-c("cafetería", "restaurante", "taquería", "cenaduría")
v_entretenimiento <- c("carrera de caballos", "casino", "local de maquinitas", "negocio de maquinas tragamodenas",
"negocio de maquinitas", "palenque", "playa", "Rodeo", "jaripeo", "plaza principal", "plaza",
"plaza comercial", "quinta")
v_meca <- c("autolavado", "refaccionaria", "taller mecánico", "taller de motos", "taller mecánico", " refaccionaria")
v_taxi <- c("Central camionera", "transporte público", " taxi", " taller mecánico", "taxi")
v_abarrotes <- c("carnicería", "mercado", "negocio de comida", "negocio: fruteria", " fruteria", "oxxo", "puesto ambulante",
"tianguis", "tienda", "tortillería")
v_vehiculo <- c("tráiler", "vehículo", "vehiculo", " vehículo", " motocicleta", " autobús", "auto",
"agresión a vehículo", "vagón de tren", "coche", "vehículo en llamas", "Camioneta",
"cajuela", "carro", "encajuelado", "Dentro de un auto", "remolcador",
" vehículo calcinado", "vehículo")
v_alcohol <- c("bar", "bar/pulquería", "Cantina", "comercio", "depósito de cerveza",
"depósito de cerveza", "vinateria", " depósito de cerveza")
v_consumo <- c("albergue", "anexo", "campo de cultivo",
"centro de rehabilitación", "punto de venta de droga", " picadero",
"picadero", "centro rehabilitación")
v_agua <- c("drenaje", "canal de aguas negras", "cisterna", "a orilla de un río",
"A orillas de un río", "deposito de agua", "laguna", "orilla de río",
"mar", "arroyo", "Dren", "canal de riego", "Canal", "Canal de aguas negras",
"aguas negras", "planta tratadora de agua", "alcantarilla", "Laguna",
"fondo de un pozo", "noria", "manglar")
v_otro1 <- c("propiedad privada", "Rancho", "obra en construcción", "Obra negra",
"construcción", "cuerpo de agua")
# Limpiar nombres
df_c <- df_c %>%
mutate(cuerpo_lugar1 =
case_when(cuerpo_lugar1 %in% v_adomicilio        ~ "afuera de domicilio",
cuerpo_lugar1 %in% v_aestablecimiento  ~ "afuera de establecimiento",
cuerpo_lugar1 %in% v_baldio            ~ "baldío/maleza/terreno",
cuerpo_lugar1 %in% v_banco             ~ "banco",
cuerpo_lugar1 %in% v_barbe             ~ "barbería/salón de belleza/estética",
cuerpo_lugar1 %in% v_calle             ~ "calle",
cuerpo_lugar1 %in% v_campo             ~ "campo deportivo",
cuerpo_lugar1 %in% v_carretera         ~ "carretera",
cuerpo_lugar1 %in% v_iglesia           ~ "comunidad/religión",
cuerpo_lugar1 %in% v_domicilio         ~ "domicilio",
cuerpo_lugar1 %in% v_estacionamiento   ~ "estacionamiento",
cuerpo_lugar1 %in% v_fiesta            ~ "fiesta/salón de fiestas",
cuerpo_lugar1 %in% v_gas               ~ "gasolinera",
cuerpo_lugar1 %in% v_hosp              ~ "hospital/consultorio",
cuerpo_lugar1 %in% v_gub               ~ "instancia gubernamental",
cuerpo_lugar1 %in% v_local             ~ "local comercial",
cuerpo_lugar1 %in% v_nego              ~ "negocio",
cuerpo_lugar1 %in% v_parque            ~ "parque/jardín/espacio público",
cuerpo_lugar1 %in% v_comida            ~ "puesto de comida/restaurante/taquería",
cuerpo_lugar1 %in% v_entretenimiento   ~ "sitio de entretenimiento",
cuerpo_lugar1 %in% v_meca              ~ "taller mecánico/vulcanizadora/lavacoches",
cuerpo_lugar1 %in% v_taxi              ~ "taxi/transporte público",
cuerpo_lugar1 %in% v_abarrotes         ~ "tienda de abarrotes/mercado/venta de comida",
cuerpo_lugar1 %in% v_vehiculo          ~ "vehículo",
cuerpo_lugar1 %in% v_alcohol           ~ "venta de alcohol",
cuerpo_lugar1 %in% v_consumo           ~ "venta/distribución/consumo sustancias/centro de rehabilitación",
cuerpo_lugar1 %in% v_agua              ~ "río/tuberia/canales de agua",
cuerpo_lugar1 %in% v_otro1             ~ "otro",
cuerpo_lugar1 ==   cuerpo_lugar1       ~ cuerpo_lugar1),
cuerpo_lugar2 =
case_when(cuerpo_lugar2 %in% v_adomicilio        ~ "afuera de domicilio",
cuerpo_lugar2 %in% v_aestablecimiento  ~ "afuera de establecimiento",
cuerpo_lugar2 %in% v_baldio            ~ "baldío/maleza/terreno",
cuerpo_lugar2 %in% v_banco             ~ "banco",
cuerpo_lugar2 %in% v_barbe             ~ "barbería/salón de belleza/estética",
cuerpo_lugar2 %in% v_calle             ~ "calle",
cuerpo_lugar2 %in% v_campo             ~ "campo deportivo",
cuerpo_lugar2 %in% v_carretera         ~ "carretera",
cuerpo_lugar2 %in% v_iglesia           ~ "comunidad/religión",
cuerpo_lugar2 %in% v_domicilio         ~ "domicilio",
cuerpo_lugar2 %in% v_estacionamiento   ~ "estacionamiento",
cuerpo_lugar2 %in% v_fiesta            ~ "fiesta/salón de fiestas",
cuerpo_lugar2 %in% v_gas               ~ "gasolinera",
cuerpo_lugar2 %in% v_hosp              ~ "hospital/consultorio",
cuerpo_lugar2 %in% v_gub               ~ "instancia gubernamental",
cuerpo_lugar2 %in% v_local             ~ "local comercial",
cuerpo_lugar2 %in% v_nego              ~ "negocio",
cuerpo_lugar2 %in% v_parque            ~ "parque/jardín/espacio público",
cuerpo_lugar2 %in% v_comida            ~ "puesto de comida/restaurante/taquería",
cuerpo_lugar2 %in% v_entretenimiento   ~ "sitio de entretenimiento",
cuerpo_lugar2 %in% v_meca              ~ "taller mecánico/vulcanizadora/lavacoches",
cuerpo_lugar2 %in% v_taxi              ~ "taxi/transporte público",
cuerpo_lugar2 %in% v_abarrotes         ~ "tienda de abarrotes/mercado/venta de comida",
cuerpo_lugar2 %in% v_vehiculo          ~ "vehículo",
cuerpo_lugar2 %in% v_alcohol           ~ "venta de alcohol",
cuerpo_lugar2 %in% v_consumo           ~ "venta/distribución/consumo sustancias/centro de rehabilitación",
cuerpo_lugar1 %in% v_agua              ~ "río/tuberia/canales de agua",
cuerpo_lugar1 %in% v_otro1             ~ "otro",
cuerpo_lugar2 ==   cuerpo_lugar2       ~ cuerpo_lugar2))
unique(df_c$cuerpo_lugar1)
unique(df_c$cuerpo_lugar2)
### 3.5. Ataque-----------------------------------------------------------------
# separar valores
df_semicolon2 <- df_c %>%
mutate(
# Reemplazar casos donde haya dos puntos (:) por punto y coma (;)
ataque_armado_clean = str_replace_all(ataque_armado_clean, ":", ";"),
# Contar número de puntos y comas (;)
semicolon2 = str_count(ataque_armado_clean, ";")) %>%
select(semicolon2)
max(df_semicolon2$semicolon2, na.rm = T) # El máximo es 3
df_ata <- df_c %>%
mutate(ataque_armado_clean = str_replace_all(ataque_armado_clean, ":", ";")) %>%
separate(ataque_armado_clean, sep = ";", c("ataque1",
"ataque2",
"ataque3"))
unique(df_ata$ataque1)
unique(df_ata$ataque2)
unique(df_ata$ataque3)
# clasificación - vector
va_blanca <- c("arma blanca","asalto con arma blanca", "asfixia",
"degollación", "lapidación", "estrangulación", "Poncha llantas",
"Ponchallantas", "martillazos", " arma blanca", " arma blanca")
va_fuego <- c("arma de fuego", "disparos a casa habitación", "disparos al aire", "detonaciones",
"disparos",  "agresión", "agresión a comercio", "agresión a vehiculo",
"agresión a vivienda", "agresión a vivienda; agresión a vehículo",
"arma de fuego; agresión a policías", "arma de fuego; secuetro",
"asalto con arma de fuego", "Bala perdida", "disparos (en general)",
"disparos a automóvil", "disparos a cámaras de vigilancia",
"disparos a comercio", "fachada baleada", "presunto feminicidio",
"billar", "secuestro armado", "levantón armado",
"agresión a vehículo", " arma de fuego", " agresión a policías",
" agresión a vehículo", " agresión a policías")
va_balacera <- c("balacera", "tiroteo")
va_enfrentamiento <- c("enfrentamiento")
va_incendio <- c("bomba molotov", "incendio de casa", "incendio de auto",
"incendio de local", "incendio de vehículo", "arma explosiva",
"incendio", "incendio provocado", "Narcobloqueos", "bomba",
"incendiado", " incendiado")
va_fseguridad <- c("desalojo", "persecución")
va_persecucion <- c("persecución")
va_rina <- c("golpes", "riña", "golpes/riña", "riña; arma blanca",
"riña; arma de fuego", "riña; arma de fuego; agresión a policías",
"linchamiento")
va_otro <- c("robo", "asalto", "narcotizado", "robo de autos",
"robo de vehículo", " atropellamiento intencional")
# Limpiar nombres
df_ata <- df_ata %>%
mutate(ataque1 =
case_when(ataque1 %in% va_blanca             ~ "agresión con arma blanca",
ataque1 %in% va_fuego              ~ "agresión con arma de fuego",
ataque1 %in% va_balacera           ~ "balacera",
ataque1 %in% va_enfrentamiento     ~ "enfrentamiento",
ataque1 %in% va_incendio           ~ "incendio/explosión",
ataque1 %in% va_fseguridad         ~ "intervención fuerzas de seguridad",
ataque1 %in% va_persecucion        ~ "persecución",
ataque1 %in% va_rina               ~ "riña",
ataque1 %in% va_otro               ~ "otro",
ataque1 ==   ataque1               ~ ataque1),
ataque2 =
case_when(ataque2 %in% va_blanca             ~ "agresión con arma blanca",
ataque2 %in% va_fuego              ~ "agresión con arma de fuego",
ataque2 %in% va_balacera           ~ "balacera",
ataque2 %in% va_enfrentamiento     ~ "enfrentamiento",
ataque2 %in% va_incendio           ~ "incendio/explosión",
ataque2 %in% va_fseguridad         ~ "intervención fuerzas de seguridad",
ataque2 %in% va_persecucion        ~ "persecución",
ataque2 %in% va_rina               ~ "riña",
ataque2 %in% va_otro               ~ "otro",
ataque2 ==   ataque2               ~ ataque2),
ataque3 =
case_when(ataque3 %in% va_blanca             ~ "agresión con arma blanca",
ataque3 %in% va_fuego              ~ "agresión con arma de fuego",
ataque3 %in% va_balacera           ~ "balacera",
ataque3 %in% va_enfrentamiento     ~ "enfrentamiento",
ataque3 %in% va_incendio           ~ "incendio/explosión",
ataque3 %in% va_fseguridad         ~ "intervención fuerzas de seguridad",
ataque3 %in% va_persecucion        ~ "persecución",
ataque3 %in% va_rina               ~ "riña",
ataque3 %in% va_otro               ~ "otro",
ataque3 ==   ataque3               ~ ataque3))
unique(df_ata$ataque1)
unique(df_ata$ataque2)
unique(df_ata$ataque3)
unique(df_ata$ataque1)
