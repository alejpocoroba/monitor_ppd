summarise(total_heridos = sum(numero_de_heridos_as_total, na.rm = T))
# Total
sum(df_heridxs_d6$total_heridos) # riña: 21
# 4) Homicidios - golpeados
df_heridxs_d7 <- df_juarez1 %>%
select(fecha_de_los_hechos,
numero_de_heridos_as_total, pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "golpeado") %>%
group_by(fecha_de_los_hechos) %>%
summarise(total_heridos = sum(numero_de_heridos_as_total, na.rm = T))
# Total
sum(df_heridxs_d7$total_heridos) # golpeado: 0
# 5) Homicidios - golpes
df_heridxs_d8 <- df_juarez1 %>%
select(fecha_de_los_hechos,
numero_de_heridos_as_total, pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "golpes") %>%
group_by(fecha_de_los_hechos) %>%
summarise(total_heridos = sum(numero_de_heridos_as_total, na.rm = T))
# Total
sum(df_heridxs_d8$total_heridos) # golpes: 0
#### Desparecidxs---------------------------------------------------------------
# 1) Desaparecidos: general
df_desaparecidos1 <- df_juarez1 %>%
select(fecha_de_los_hechos,
privacion_de_la_libertad, numero_de_personas_privadas_de_su_libertad) %>%
filter(privacion_de_la_libertad == "TRUE") %>%
filter(numero_de_personas_privadas_de_su_libertad >= "1") %>%
group_by(fecha_de_los_hechos) %>%
summarise(total_desaparecidos = sum(numero_de_personas_privadas_de_su_libertad, na.rm = T))
sum(df_desaparecidos1$total_desaparecidos) # desaparecidos: 21
View(df_desaparecidos1)
# 3. Figuras--------------------------------------------------------------------
# Homicidios mensual
fecha <- df_homicidios_d1 %>%
mutate(mes = lubridate::month(fecha_de_los_hechos),
dia = fecha_de_los_hechos,
semana = lubridate::week(fecha_de_los_hechos)) %>%
group_by(mes) %>%
summarize(mes_total = sum(total_homicidios)) %>%
mutate(mes = case_when(
mes == "6"  ~ "Junio",
mes == "7"  ~ "Julio",
mes == "8"  ~ "Agosto",
mes == "9"  ~ "Septiembre",
mes == "10" ~ "Octubre")) %>%
mutate(mes = factor(
mes, levels = c("Junio", "Julio", "Agosto", "Septiembre", "Octubre")))
ggplot(fecha, aes(x = mes, y = mes_total, group = 1)) +
geom_point()+
geom_line() +
ggrepel::geom_text_repel(aes(label = mes_total), hjust = -0.1, color = "black") +
labs(title = "Homicidios violentos en Ciudad Juárez",
subtitle = "Entre junio y octubre de 2022\n",
y = "Número de homicidios\n",
x = "\nMes",
caption = "Fuente: Elaboración propia con base en el Monitor-PPD (2022)")+
guides(color = "none") +
theme_light() +
theme(legend.position = "none")
# Guardar figura
# ggsave(file = paste_fig(paste0("homicidio_juarez", ".png")),  width = 10, height = 6)
# Homicidios día
fecha_dia <- df_homicidios_d1 %>%
mutate(mes = lubridate::month(fecha_de_los_hechos),
dia = fecha_de_los_hechos,
semana = lubridate::week(fecha_de_los_hechos))
ggplot(fecha_dia, aes(x = dia, y = total_homicidios, group = 1)) +
geom_point()+
geom_line() +
ggrepel::geom_text_repel(aes(label = total_homicidios), hjust = -0.1, color = "black") +
labs(title = "Homicidios violentos en Ciudad Juárez",
subtitle = "Entre junio y octubre de 2022\n",
y = "Número de homicidios\n",
x = "\n Día",
caption = "Fuente: Elaboración propia con base en el Monitor-PPD (2022)")+
guides(color = "none") +
theme_light()
# Homicidios semana
fecha_semana <- df_homicidios_d1 %>%
mutate(mes = lubridate::month(fecha_de_los_hechos),
dia = fecha_de_los_hechos,
semana = lubridate::week(fecha_de_los_hechos)) %>%
group_by(semana) %>%
summarize(total_semana = sum(total_homicidios))
ggplot(fecha_semana, aes(x = semana, y = total_semana, group = 1)) +
geom_point()+
geom_line() +
ggrepel::geom_text_repel(aes(label = total_semana), hjust = -0.1, color = "black") +
labs(title = "Homicidios violentos en Ciudad Juárez",
subtitle = "Entre junio y octubre de 2022\n",
y = "Número de homicidios\n",
x = "\n Semana",
caption = "Fuente: Elaboración propia con base en el Monitor-PPD (2022)")+
guides(color = "none") +
theme_light()
ggplot(fecha, aes(x = mes, y = mes_total, group = 1)) +
geom_point()+
geom_line() +
ggrepel::geom_text_repel(aes(label = mes_total), hjust = -0.1, color = "black") +
labs(title = "Homicidios violentos en Ciudad Juárez",
subtitle = "Entre junio y octubre de 2022\n",
y = "Número de homicidios\n",
x = "\nMes",
caption = "Fuente: Elaboración propia con base en el Monitor-PPD (2022)")+
guides(color = "none") +
theme_light() +
theme(legend.position = "none")
ggplot(fecha, aes(x = mes, y = mes_total, group = 1)) +
geom_point()+
geom_line() +
ggrepel::geom_text_repel(aes(label = mes_total), hjust = -0.1, color = "black") +
labs(title = "Homicidios violentos en Ciudad Juárez",
subtitle = "Junio a octubre de 2022\n",
y = "Número de homicidios\n",
x = "\nMes",
caption = "Fuente: Elaboración propia con base en el Monitor-PPD (2022)")+
guides(color = "none") +
theme_light() +
theme(legend.position = "none")
ggsave(file = paste_fig(paste0("homicidio_juarez", ".png")),  width = 10, height = 6)
#------------------------------------------------------------------------------#
# Proyecto:                   Monitor PPD versión 2
# Objetivo:                   Reporte de desempeño: captura de notas
#
# Encargado:                  Alejandro Pocoroba
# Correo:                     alejandro.pocoroba@cide.edu
# Fecha de creación:          10 de noviembre de 2022
# Última actualización:       25 de noviembre de 2022
#------------------------------------------------------------------------------#
# Fuente: Monitor PPD versión 2
# 0. Configuración inicial -----------------------------------------------------
# Silenciar mensajes de .group en dplyr
options(dplyr.summarise.inform = FALSE)
# Librerías
require(pacman)
p_load(
readxl, tidyverse, dplyr, srvyr, zoo, ggtext, beepr)
# Limpiar espacio de trabajo
rm(list=ls())
# Funciones con direcciones de las carpetas
paste_inp <- function(x){paste0("02_datos_crudos/" , x)}
paste_out <- function(x){paste0("03_datos_limpios/", x)}
paste_fig <- function(x){paste0("04_figuras/"      , x)}
# 1. Cargar datos --------------------------------------------------------------
#junio
m1 <- read_xlsx(paste_inp("Monitor_junio/Monitor_PPD_junio1.xlsx"))
m2 <- read_xlsx(paste_inp("Monitor_junio/Monitor_PPD_junio2.xlsx"))
# julio
m3 <- read_xlsx(paste_inp("Monitor_PPD_julio.xlsx"))
# Agosto
m4 <- read_xlsx(paste_inp("Monitor_PPD_agosto1.xlsx"))
m5 <- read_xlsx(paste_inp("Monitor_PPD_agosto2.xlsx"))
m6 <- read_xlsx(paste_inp("Monitor_PPD_agosto3.xlsx"))
# Septiembre
m7 <- read_xlsx(paste_inp("Monitor_PPD_septiembre1.xlsx"))
m8 <- read_xlsx(paste_inp("Monitor_PPD_septiembre2.xlsx"))
#Octubre
m9 <- read_xlsx(paste_inp("Monitor_PPD_octubre.xlsx"))
# Noviembre
m10 <- read_xlsx(paste_inp("Monitor_PPD_noviembre.xlsx"))
# 2. Limpar datos --------------------------------------------------------------
df_j <- m1 %>%
rename("1.2.2) Enlace" = "1.2.1) Enlace",
"1.2.5) Nota complementaria/duplicada" = "1.2.5) Nota duplicada") %>%
mutate(
`1.2.6) Enlaces de notas complementaria/duplicada` =
paste(`1.2.6) Enlace de nota duplicada`, `1.2.6.1) Enlaces de notas duplicadas`,
sep = ";")) %>%
select(-c(`1.2.6) Enlace de nota duplicada`,
`1.2.6.1) Enlaces de notas duplicadas`))
# Bases que tienen valores ocultos de origen
m5 <- m5 %>%
filter(!is.na(Id))
m6 <- m6 %>%
filter(!is.na(Id))
# Se pegan todas las bases
df_pegada <- df_j %>% # base junio 1
bind_rows(m2) %>%   # base junio 2
bind_rows(m3) %>%   # base julio
bind_rows(m4) %>%   # base agosto 1
bind_rows(m5) %>%   # base agosto 2
bind_rows(m6) %>%   # base agosto 3
bind_rows(m7) %>%   # base septiembre 1
bind_rows(m8) %>%   # base septiembre 2
bind_rows(m9)       # base octubre
# limpiar nombres de microdatos
df_microdatos1 <- df_pegada %>%
janitor::clean_names() %>%
select("responsable" = "x1_1_responsable",
"publicacion" = "x1_2_1_fecha_de_publicacion",
"estado"      = "x1_3_3_estado")
# m10 tiene estructura diferente
df_microdatos2 <- m10 %>% # noviembre al 17/11
janitor::clean_names() %>%
select("responsable" = "x1_1_responsable",
"publicacion" = "x1_2_1_fecha_de_publicacion",
"estado"      = "x1_3_3_estado")
# Se pagan las bases de junio a noviembre
df_microdatos3 <-  df_microdatos1 %>%
bind_rows(df_microdatos2)  %>%
# modificaciones sobre fecha: mes
mutate(mes = lubridate::month(publicacion)) %>%
mutate(
id_entidad = str_extract_all(estado, "[:digit:]"))
# 3. Cifras de captura ---------------------------------------------------
## Periodo junio a noviembre----
# Total de observaciones
paste0("Número total de observaciones entre junio y noviembre de 2002: ", dim(df_microdatos3)[1])
# Total de obsveraciones por mes
table(df_microdatos3$mes)
# Total de observaciones por responsable
table(df_microdatos3$responsable)
# Porcentajes
# Porcentaje por responsable
df_responsable <- df_microdatos3 %>%
group_by(responsable) %>%
summarise(notas = n()) %>%
ungroup() %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
# Porcentje por responsable y mes
df_responsable_mes <- df_microdatos3 %>%
group_by(mes, responsable) %>%
summarise(notas = n()) %>%
ungroup() %>%
group_by(mes) %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
# Porcentaje por estado
df_entidad<- df_microdatos3 %>%
group_by(estado) %>%
summarise(notas = n()) %>%
ungroup() %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
# 4. Figuras-----
## Capturas general----
# procesamiento
df_data1 <- df_microdatos3 %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()) %>%
filter(!is.na(estado)) %>%
drop_na()
# Por estado, publicación y responsable
ggplot(
# Datos
df_data1 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = "Total de observaciones capturadas para el Monitor PPD de junio a noviembre",
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 08/12/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Temas
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig("01_captura_general.png"),
width = 10, height = 6)
## Captura desagregado----
# Procesamiento
for(i in 6:11) {
df_data2 <- df_microdatos3 %>%
filter(mes == i) %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()
) %>%
filter(!is.na(estado)) %>%
drop_na()
# Por día, mes, estado y responsable
ggplot(
# Datos
df_data2 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = paste0("Total de observaciones capturadas por mes ", i),
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 08/12/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Tema
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig(paste0("02_captura_estado_fecha_persona_", i, ".png")),
width = 10, height = 6)
}
# Fin
View(df_data1)
#------------------------------------------------------------------------------#
# Proyecto:                   Monitor PPD versión 2
# Objetivo:                   Reporte de desempeño: captura de notas
#
# Encargado:                  Alejandro Pocoroba
# Correo:                     alejandro.pocoroba@cide.edu
# Fecha de creación:          10 de noviembre de 2022
# Última actualización:       08 de diciembre de 2022
#------------------------------------------------------------------------------#
# Fuente: Monitor PPD versión 2
# 0. Configuración inicial -----------------------------------------------------
# Silenciar mensajes de .group en dplyr
options(dplyr.summarise.inform = FALSE)
# Librerías
require(pacman)
p_load(
readxl, tidyverse, dplyr, srvyr, zoo, ggtext, beepr)
# Limpiar espacio de trabajo
rm(list=ls())
# Funciones con direcciones de las carpetas
paste_inp <- function(x){paste0("02_datos_crudos/" , x)}
paste_out <- function(x){paste0("03_datos_limpios/", x)}
paste_fig <- function(x){paste0("04_figuras/"      , x)}
# 1. Cargar datos --------------------------------------------------------------
#junio
m1 <- read_xlsx(paste_inp("Monitor_junio/Monitor_PPD_junio1.xlsx"))
m2 <- read_xlsx(paste_inp("Monitor_junio/Monitor_PPD_junio2.xlsx"))
# julio
m3 <- read_xlsx(paste_inp("Monitor_PPD_julio.xlsx"))
# Agosto
m4 <- read_xlsx(paste_inp("Monitor_PPD_agosto1.xlsx"))
m5 <- read_xlsx(paste_inp("Monitor_PPD_agosto2.xlsx"))
m6 <- read_xlsx(paste_inp("Monitor_PPD_agosto3.xlsx"))
# Septiembre
m7 <- read_xlsx(paste_inp("Monitor_PPD_septiembre1.xlsx"))
m8 <- read_xlsx(paste_inp("Monitor_PPD_septiembre2.xlsx"))
#Octubre
m9 <- read_xlsx(paste_inp("Monitor_PPD_octubre.xlsx"))
# Noviembre
m10 <- read_xlsx(paste_inp("Monitor_PPD_noviembre.xlsx"))
# 2. Limpar datos --------------------------------------------------------------
df_j <- m1 %>%
rename("1.2.2) Enlace" = "1.2.1) Enlace",
"1.2.5) Nota complementaria/duplicada" = "1.2.5) Nota duplicada") %>%
mutate(
`1.2.6) Enlaces de notas complementaria/duplicada` =
paste(`1.2.6) Enlace de nota duplicada`, `1.2.6.1) Enlaces de notas duplicadas`,
sep = ";")) %>%
select(-c(`1.2.6) Enlace de nota duplicada`,
`1.2.6.1) Enlaces de notas duplicadas`))
# Bases que tienen valores ocultos de origen
m5 <- m5 %>%
filter(!is.na(Id))
m6 <- m6 %>%
filter(!is.na(Id))
# Se pegan todas las bases
df_pegada <- df_j %>% # base junio 1
bind_rows(m2) %>%   # base junio 2
bind_rows(m3) %>%   # base julio
bind_rows(m4) %>%   # base agosto 1
bind_rows(m5) %>%   # base agosto 2
bind_rows(m6) %>%   # base agosto 3
bind_rows(m7) %>%   # base septiembre 1
bind_rows(m8) %>%   # base septiembre 2
bind_rows(m9)       # base octubre
# limpiar nombres de microdatos
df_microdatos1 <- df_pegada %>%
janitor::clean_names() %>%
select("responsable" = "x1_1_responsable",
"publicacion" = "x1_2_1_fecha_de_publicacion",
"estado"      = "x1_3_3_estado")
# m10 tiene estructura diferente
df_microdatos2 <- m10 %>% # noviembre al 17/11
janitor::clean_names() %>%
select("responsable" = "x1_1_responsable",
"publicacion" = "x1_2_1_fecha_de_publicacion",
"estado"      = "x1_3_3_estado")
# Se pagan las bases de junio a noviembre
df_microdatos3 <-  df_microdatos1 %>%
bind_rows(df_microdatos2)  %>%
# modificaciones sobre fecha: mes
mutate(mes = lubridate::month(publicacion)) %>%
mutate(
id_entidad = str_extract_all(estado, "[:digit:]"))
# 3. Cifras de captura ---------------------------------------------------
## Periodo junio a noviembre----
# Total de observaciones
paste0("Número total de observaciones entre junio y noviembre de 2002: ", dim(df_microdatos3)[1])
# Total de obsveraciones por mes
table(df_microdatos3$mes)
# Total de observaciones por responsable
table(df_microdatos3$responsable)
# Porcentajes
# Porcentaje por responsable
df_responsable <- df_microdatos3 %>%
group_by(responsable) %>%
summarise(notas = n()) %>%
ungroup() %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
# Porcentje por responsable y mes
df_responsable_mes <- df_microdatos3 %>%
group_by(mes, responsable) %>%
summarise(notas = n()) %>%
ungroup() %>%
group_by(mes) %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
# Porcentaje por estado
df_entidad<- df_microdatos3 %>%
group_by(estado) %>%
summarise(notas = n()) %>%
ungroup() %>%
mutate(
porcentaje = round(notas/sum(notas), 4),
porcentaje_text = scales::percent(porcentaje, accuracy = 0.01))
# 4. Figuras-----
## Capturas general----
# procesamiento
df_data1 <- df_microdatos3 %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()) %>%
filter(!is.na(estado)) %>%
drop_na()
# Por estado, publicación y responsable
ggplot(
# Datos
df_data1 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = "Total de observaciones capturadas para el Monitor PPD de junio a noviembre",
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 08/12/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Temas
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig("01_captura_general.png"),
width = 10, height = 6)
## Captura desagregado----
# Procesamiento
for(i in 6:11) {
df_data2 <- df_microdatos3 %>%
filter(mes == i) %>%
group_by(publicacion, estado, responsable) %>%
summarise(
total = n()
) %>%
filter(!is.na(estado)) %>%
drop_na()
# Por día, mes, estado y responsable
ggplot(
# Datos
df_data2 %>% filter(publicacion>= as.Date("2022-06-01"), publicacion<= as.Date("2022-11-30")),
# Coordenadas
aes(x = publicacion, y = total, fill = responsable)) +
facet_wrap(~estado, ncol = 8) +
# Geoms
geom_col() +
# Etiquetas
labs(
title = paste0("Total de observaciones capturadas por mes ", i),
subtitle = "Por estado, fecha de publicación y persona responsable",
fill = "Persona\nresponsable\n",
x = "Fecha de publicación",
y = "\nNúmero de observaciones capturadas",
caption = paste0("Fuente: Monitor-PPD al 08/12/22 ")
) +
# Escalas
scale_fill_brewer(palette="Set2") +
# Tema
theme_bw() +
theme(
legend.position = "top",
axis.text.x = element_text(angle = 30))
ggsave(file = paste_fig(paste0("02_captura_estado_fecha_persona_", i, ".png")),
width = 10, height = 6)
}
# Fin
