<<<<<<< Updated upstream
crudo <- crudo %>%
mutate(
claveEdo = str_sub(estado, -2, -1))
### 2.1 Limpieza de texto-------------------------------------------------------
# Limpiar T/F por 1/0
crudo$violencia_armada_fuego <- as.character(crudo$violencia_armada_fuego)
crudo$homicidios <- as.character(crudo$homicidios)
crudo$heridxs <- as.character(crudo$heridxs)
crudo$genero <- as.character(crudo$genero)
crudo$presencia_criminal <- as.character(crudo$presencia_criminal)
crudo$actividades_delictivas <- as.character(crudo$actividades_delictivas)
crudo$detenciones <- as.character(crudo$detenciones)
crudo$acciones_gubernamentales <- as.character(crudo$acciones_gubernamentales)
crudo$politica_seguridad <- as.character(crudo$politica_seguridad)
limpiar_tf <- function(x){
case_when(
x == "FALSE" ~ "0",
x == "TRUE"  ~ "1",
x == x ~ x
)
}
crudo <- crudo %>%
mutate_at(.vars = c("violencia_armada_fuego", "homicidios", "heridxs",
"genero", "presencia_criminal", "actividades_delictivas",
"detenciones", "acciones_gubernamentales", "politica_seguridad"),
.funs = ~limpiar_tf(.))
# Minúsculas
crudo <- crudo %>%
mutate_at(.vars = c("otra", "observaciones"),
.funs = ~str_to_lower(.))
# Acentos
crudo$otra          <- stri_trans_general(crudo$otra, "Latin-ASCII")
crudo$observaciones <- stri_trans_general(crudo$observaciones, "Latin-ASCII")
# Limpieza variable "otra"
# separar valores
df_crudo <- crudo %>%
mutate(otra = str_replace_all(otra, "/", ";"),
otra = str_replace_all(otra, ":", ";")) %>%
separate(otra, sep = ";", c("otra1", "otra2"))
unique(df_crudo$otra1)
unique(df_crudo$otra2)
unique(df_crudo$observaciones)
# Grupos sociales
v_menoredad        <- c("menor lesionadx", "menor de edad implicado",
"menor de edad implicadx", "violencia a infantes",
"menores implicadxs", "menor", "menor de edad",
"menores de edad involucradxs", " menores",
"menores", " menores involucradxs", " menor de edad implicado",
" menores heridxs", " menor de edad", " menores de edad",
"menor de edad", "menor de edad herido",
"menor de edad heridio con arma blanca",
"menor de edad detenido", "menor de edad implicado\r\n",
"menor de edad implicado")
v_taxista         <- c("taxistas \r\n", "taxista", "taxistas\r\n",
"taxista \r\n", "taxista\r\n" )
v_autodefensas    <- c("autodefensas")
# Autoridades
v_detautoridad     <- c("detencion de autoridad", "detencion de policias",
"detencion a autoridad", "detencion autoridad", "detencion a policias")
v_abusodeautoridad <- c("tortura policiaca", "tortura por parte de autoridad",
"extorsion de autoridad", "abuso en contra de migrantes",
"abuso policial", "tortura policiaca", "abuso de autoridad",
"autoridad", "abuso de autoridad")
v_agresionauto     <- c("agresion a autoridad", "agresion a  autoridad", "neutralizacion policiaca",
"asesinato de autoridad", "asesinato autoridad", "recuento de policias asesinados",
"policias", "dos agentes de la guardia nacional resultaron heridos de gravedad luego de que fueron atacados a balazos",
"policia", "agresion a autoridad\r\n" )
v_actiauto         <- c("erradicacion", "allaneamiento", "capacitacion ddhh", "capacitacion",
"capacitacion a autoridad", "platicas de prevencion",
"agresion a autoridad ", "actividad semar",
"comercio ilicito")
# Actividad delictiva
v_persecucion      <- c("persecucion")
v_desparecidxs     <- c("desaparecidxs", "cuerpo de desaparecidxs", "cuerpo desaparecidxs",
"desapariciones", "desaparecido", "menor de edad desaparecido",
"menores desaparecidxs", "desaparecidos", "desaparecidx",
"cuerpo de desaparrecidx", "posible cuerpo de desaparecidx",
"desaparicion forzada", "cuerpo de desaparecidx",
"colectivos de busqueda", "desaparecidxs\r\n",
"cuerpo de desaparecidx\r\n")
v_secuestro        <- c("levanton", "victima fue levantado", "secuestro", " secuestro",
"secuestro de ninxs", "secuestro de ninos",
"robo y secuestro", "secuestro reportero", "secuestro de ninxs",
"secuestro", "victima fue levantado", "sustraccion de menor",
"sustraccion de menores", "secuestro virtual",
" secuestro", "levanton\r\n")
v_fosas            <- c("fosas clandestinas", "fosa clandestina", "fosa")
v_incendio         <- c("quema de auto", "incendio domicilio",
"incendio vehiculos", "incendio",
"quema de negocio", "explposion", "incendio vivienda",
"quemaduras", "incendio de negocio", "quema de auto",
"explosion", "bombas caseras", "agresion con explosivos",
" incendio vehiculo", "agresion con explosivos",
" incendio vehiculo", "agresion con explosivos",
"ataque con granadas", "detonacion de artefacto explosivo.",
"amenaza de bomba")
v_robo             <- c(" robo", "robo", "asalto", "atraco", "vehiculo robado",
"robo", "robo", "robo")
v_corrupcion       <- c("corrupcion")
v_fraude           <- c("patrullas falsas", "fraude cibernetico", "estafa", "fraude",
"billetes falsos")
v_extorsion        <- c(" cobro de piso", "cobro de piso", "extorsion",
"prestamistas gota a gota")
v_sustancias       <- c("medicamento controlado", "politica de drogas", "fentanilo",
"sustancias", "contrabando de cigarros", "bebe intoxicado fentanilo")
v_traflorfau       <- c("madera ilegal", "tala clandestina", "madera clandestina",
"madera ilegal", "tala clandestina" )
v_huachicol        <- c("huachicoleo", "huachicol", "control de pozos petroleros",
"huachicoleo")
v_personas         <- c("trafico de migrantes", "trafico de personas",
"traficantes de humanos")
v_narcoactividades <- c("narcobloqueo", "narcobloqueos",
"narcolaboratorio", "campamento",
"narcocampamento", "narco-polleria")
v_narcomensaje    <- c("narcomensajes", "narcomensaje", "mensaje mediante grabacion",
"mensaje", "narcomensaje", "mensaje",
"narco mensaje \"limpieza social\"", "narcomanta",
"narco manta \r\n", "arias cartulinas con mensajes amenazantes.",
"narcomensaje\r\n", "narcomensaje \r\n",
"narcomanta \r\n", "cuerpo  con mensaje", "mensaje",
"mensaje mediante grabacion", "narco mensaje")
v_amaneza          <- c("amenazas")
# Violencia familiar y género
v_genero           <- c("intento de violacion", "posible feminicidio",
"violacion", "presunto feminicidio", "violencia familiar",
"violencia de genero", "violencia de genero0",
" violencia genero", "familiar", "genero",
"   violencia familiar", "violencia familiar/ violencia genero\r\n",
"posible feminicidio", "violencia familiar", "violencia familiar\r\n",
"violencia familiar/ violencia genero")
# Agresiones contra prensa
v_periodistas      <- c("agresion a reporteros", "acciones libertad de prensa")
# Agresión en general
v_agresion         <- c("agresion a vehiculo", "agresion", "agresion a vivienda",
"ataque a vehiculo", "disparos vivienda", "disparos negocios",
" agresion a vehiculo", "disparos negocios",
"disparos negocios", "disparos vivienda\r\n")
# Lugares
v_centro           <- c("centro de rehabilitacion")
v_penitenciario    <- c("situacion en sistema penitenciario", "motin centro penitenciario",
"cuerpo detenido", "muerto detenido")
nombres_otra <- function(x) {
case_when(
x %in% v_menoredad        ~  "menor de edad",
x %in% v_autodefensas     ~  "autodefensas",
x %in% v_detautoridad     ~  "detencion de autoridades",
x %in% v_abusodeautoridad ~  "abuso de autoridad",
x %in% v_agresionauto     ~  "agresion contra autoridades",
x %in% v_actiauto         ~  "actividad de las autoridades",
x %in% v_persecucion      ~  "persecucion",
x %in% v_desparecidxs     ~  "desaparecidos/as",
x %in% v_secuestro        ~  "secuestro",
x %in% v_fosas            ~  "fosas clandestinas",
x %in% v_incendio         ~  "incendio/explosivos",
x %in% v_robo             ~  "robo/asaltos",
x %in% v_corrupcion       ~  "corrupcion",
x %in% v_fraude           ~  "fraude",
x %in% v_extorsion        ~  "extorsion",
x %in% v_sustancias       ~  "sustancias",
x %in% v_traflorfau       ~  "trafico de flora/fauna",
x %in% v_huachicol        ~  "huachicol",
x %in% v_personas         ~  "trafico de personas",
x %in% v_narcoactividades ~  "narcoactividades",
x %in% v_amaneza          ~  "amanezas",
x %in% v_genero           ~  "violencia familiar/genero",
x %in% v_periodistas      ~  "agresion contra la prensa",
x %in% v_agresion         ~  "agresiones",
x %in% v_centro           ~  "centro de rehabilitacion",
x %in% v_penitenciario    ~  "centro penitenciario",
x %in% v_narcomensaje     ~  "narcomensaje",
x == x ~ x
)
}
df_crudo_li <- df_crudo %>%
mutate_at(.vars = c("otra1", "otra2", "observaciones"),
.funs = ~nombres_otra(.))
# Valores similares en columnas distintas en la misma observacion
df_crudo_li2 <- df_crudo_li %>%
mutate(otra2 = if_else(otra2 == otra1, NA_character_, otra2))
# Detalles
# ID y orden
df_limpio <- df_crudo_li2 %>%
mutate(id = 1:length(df_crudo_li$mes)) %>%
select(id, estado, claveEdo, fecha,  mes, anio, titulo_nota, enlace, enlace_relacionado,
violencia_armada_fuego, homicidios, heridxs, genero, presencia_criminal,
actividades_delictivas, detenciones, acciones_gubernamentales, politica_seguridad,
otra1, otra2) %>%
rename("heridos_as" = "heridxs") %>%
filter(mes != "07")
# se deja fuera observaciones por indicaciones de LA 08/08/23
# 3. Base limpia----------------------------------------------------------------
# Microdatos:
openxlsx::write.xlsx(df_limpio,
file = paste_out("monitor.abril_junio2023.xlsx"))
# 4. Base panel
df_limpio$violencia_armada_fuego   <- as.numeric(df_limpio$violencia_armada_fuego)
df_limpio$homicidios               <- as.numeric(df_limpio$homicidios)
df_limpio$heridos_as               <- as.numeric(df_limpio$heridos_as)
df_limpio$genero                   <- as.numeric(df_limpio$genero)
df_limpio$presencia_criminal       <- as.numeric(df_limpio$presencia_criminal)
df_limpio$actividades_delictivas   <- as.numeric(df_limpio$actividades_delictivas)
df_limpio$detenciones              <- as.numeric(df_limpio$detenciones)
df_limpio$acciones_gubernamentales <- as.numeric(df_limpio$acciones_gubernamentales)
df_limpio$politica_seguridad       <- as.numeric(df_limpio$politica_seguridad)
# por mes
df_dp_m <- df_limpio %>%
group_by(mes, estado, claveEdo) %>%
summarise(violencia_armada_fuego   = sum(violencia_armada_fuego, na.rm = TRUE),
homicidios               = sum(homicidios, na.rm = TRUE),
heridos_as               = sum(heridos_as, na.rm = TRUE),
genero                   = sum(genero, na.rm = TRUE),
presencia_criminal       = sum(presencia_criminal, na.rm = TRUE),
actividades_delictivas   = sum(actividades_delictivas, na.rm = TRUE),
detenciones              = sum(detenciones, na.rm = TRUE),
acciones_gubernamentales = sum(acciones_gubernamentales, na.rm = TRUE),
politica_seguridad       = sum(politica_seguridad, na.rm = TRUE))
# de largo a ancho
df_dp_m2 <- df_dp_m %>%
pivot_longer(cols = -c(mes,estado, claveEdo), names_to = "tipo", values_to = "total") %>%
pivot_wider(names_from = c(tipo, mes), values_from = total)
# 5. Base limpia----------------------------------------------------------------
openxlsx::write.xlsx(df_dp_m2,
file = paste_out("ppd.monitor.abril_junio2023.xlsx"))
#------------------------------------------------------------------------------#
# Proyecto:                   Monitor PPD 2023
# Objetivo:                   Reporte de desempeño: captura de notas
#
# Encargado:                  Alejandro Pocoroba
# Correo:                     alejandro.pocoroba@cide.edu
# Fecha de creación:          01 de agosto de 2023
# Última actualización:       01 de agosto de 2023
#------------------------------------------------------------------------------#
# Fuente: Monitor PPD versión abril - junio 2023
# 0. Configuración inicial -----------------------------------------------------
# Silenciar mensajes de .group en dplyr
options(dplyr.summarise.inform = FALSE)
# Librerías
require(pacman)
p_load(
readxl, tidyverse, dplyr, srvyr, zoo, ggtext, beepr, lubridate, stringr, janitor, stringi)
# Limpiar espacio de trabajo
rm(list=ls())
# Funciones con direcciones de las carpetas
paste_inp <- function(x){paste0("02_datos_crudos/" , x)}
paste_out <- function(x){paste0("03_datos_limpios/", x)}
paste_fig <- function(x){paste0("04_figuras/"      , x)}
# 1. Cargar datos --------------------------------------------------------------
c <- read_xlsx(paste_inp("monitor_abril_2023.xlsx"))
b <- read_xlsx(paste_inp("monitor_junio_2023.xlsx"))
d <- read_xlsx(paste_inp("monitor_marzo_2023.xlsx"))
# Se unen bases
a <- c %>%
bind_rows(b) %>%
bind_rows(d)
# 2. Procesamiento -------------------------------------------------------------
# Limpieza de nombres y variables de interés
crudo <- a %>%
janitor::clean_names() %>%
select(estado:observaciones)
# Tratamiento de fechas #
crudo$"fecha" <- as.Date(crudo$"fecha")
crudo$dia     <- format(crudo$"fecha", "%d")
crudo$mes     <- format(crudo$"fecha", "%m")
crudo$anio    <- format(crudo$"fecha", "%Y")
# Estado según su clave de Inegi
crudo <- crudo %>%
mutate(
claveEdo = str_sub(estado, -2, -1))
### 2.1 Limpieza de texto-------------------------------------------------------
# Limpiar T/F por 1/0
crudo$violencia_armada_fuego <- as.character(crudo$violencia_armada_fuego)
crudo$homicidios <- as.character(crudo$homicidios)
crudo$heridxs <- as.character(crudo$heridxs)
crudo$genero <- as.character(crudo$genero)
crudo$presencia_criminal <- as.character(crudo$presencia_criminal)
crudo$actividades_delictivas <- as.character(crudo$actividades_delictivas)
crudo$detenciones <- as.character(crudo$detenciones)
crudo$acciones_gubernamentales <- as.character(crudo$acciones_gubernamentales)
crudo$politica_seguridad <- as.character(crudo$politica_seguridad)
limpiar_tf <- function(x){
case_when(
x == "FALSE" ~ "0",
x == "TRUE"  ~ "1",
x == x ~ x
)
}
crudo <- crudo %>%
mutate_at(.vars = c("violencia_armada_fuego", "homicidios", "heridxs",
"genero", "presencia_criminal", "actividades_delictivas",
"detenciones", "acciones_gubernamentales", "politica_seguridad"),
.funs = ~limpiar_tf(.))
# Minúsculas
crudo <- crudo %>%
mutate_at(.vars = c("otra", "observaciones"),
.funs = ~str_to_lower(.))
# Acentos
crudo$otra          <- stri_trans_general(crudo$otra, "Latin-ASCII")
crudo$observaciones <- stri_trans_general(crudo$observaciones, "Latin-ASCII")
# Limpieza variable "otra"
# separar valores
df_crudo <- crudo %>%
mutate(otra = str_replace_all(otra, "/", ";"),
otra = str_replace_all(otra, ":", ";")) %>%
separate(otra, sep = ";", c("otra1", "otra2"))
unique(df_crudo$otra1)
unique(df_crudo$otra2)
unique(df_crudo$observaciones)
# Grupos sociales
v_menoredad        <- c("menor lesionadx", "menor de edad implicado",
"menor de edad implicadx", "violencia a infantes",
"menores implicadxs", "menor", "menor de edad",
"menores de edad involucradxs", " menores",
"menores", " menores involucradxs", " menor de edad implicado",
" menores heridxs", " menor de edad", " menores de edad",
"menor de edad", "menor de edad herido",
"menor de edad heridio con arma blanca",
"menor de edad detenido", "menor de edad implicado\r\n",
"menor de edad implicado")
v_taxista         <- c("taxistas \r\n", "taxista", "taxistas\r\n",
"taxista \r\n", "taxista\r\n" )
v_autodefensas    <- c("autodefensas")
# Autoridades
v_detautoridad     <- c("detencion de autoridad", "detencion de policias",
"detencion a autoridad", "detencion autoridad", "detencion a policias")
v_abusodeautoridad <- c("tortura policiaca", "tortura por parte de autoridad",
"extorsion de autoridad", "abuso en contra de migrantes",
"abuso policial", "tortura policiaca", "abuso de autoridad",
"autoridad", "abuso de autoridad")
v_agresionauto     <- c("agresion a autoridad", "agresion a  autoridad", "neutralizacion policiaca",
"asesinato de autoridad", "asesinato autoridad", "recuento de policias asesinados",
"policias", "dos agentes de la guardia nacional resultaron heridos de gravedad luego de que fueron atacados a balazos",
"policia", "agresion a autoridad\r\n" )
v_actiauto         <- c("erradicacion", "allaneamiento", "capacitacion ddhh", "capacitacion",
"capacitacion a autoridad", "platicas de prevencion",
"agresion a autoridad ", "actividad semar",
"comercio ilicito")
# Actividad delictiva
v_persecucion      <- c("persecucion")
v_desparecidxs     <- c("desaparecidxs", "cuerpo de desaparecidxs", "cuerpo desaparecidxs",
"desapariciones", "desaparecido", "menor de edad desaparecido",
"menores desaparecidxs", "desaparecidos", "desaparecidx",
"cuerpo de desaparrecidx", "posible cuerpo de desaparecidx",
"desaparicion forzada", "cuerpo de desaparecidx",
"colectivos de busqueda", "desaparecidxs\r\n",
"cuerpo de desaparecidx\r\n")
v_secuestro        <- c("levanton", "victima fue levantado", "secuestro", " secuestro",
"secuestro de ninxs", "secuestro de ninos",
"robo y secuestro", "secuestro reportero", "secuestro de ninxs",
"secuestro", "victima fue levantado", "sustraccion de menor",
"sustraccion de menores", "secuestro virtual",
" secuestro", "levanton\r\n")
v_fosas            <- c("fosas clandestinas", "fosa clandestina", "fosa")
v_incendio         <- c("quema de auto", "incendio domicilio",
"incendio vehiculos", "incendio",
"quema de negocio", "explposion", "incendio vivienda",
"quemaduras", "incendio de negocio", "quema de auto",
"explosion", "bombas caseras", "agresion con explosivos",
" incendio vehiculo", "agresion con explosivos",
" incendio vehiculo", "agresion con explosivos",
"ataque con granadas", "detonacion de artefacto explosivo.",
"amenaza de bomba")
v_robo             <- c(" robo", "robo", "asalto", "atraco", "vehiculo robado",
"robo", "robo", "robo")
v_corrupcion       <- c("corrupcion")
v_fraude           <- c("patrullas falsas", "fraude cibernetico", "estafa", "fraude",
"billetes falsos")
v_extorsion        <- c(" cobro de piso", "cobro de piso", "extorsion",
"prestamistas gota a gota")
v_sustancias       <- c("medicamento controlado", "politica de drogas", "fentanilo",
"sustancias", "contrabando de cigarros", "bebe intoxicado fentanilo")
v_traflorfau       <- c("madera ilegal", "tala clandestina", "madera clandestina",
"madera ilegal", "tala clandestina" )
v_huachicol        <- c("huachicoleo", "huachicol", "control de pozos petroleros",
"huachicoleo")
v_personas         <- c("trafico de migrantes", "trafico de personas",
"traficantes de humanos")
v_narcoactividades <- c("narcobloqueo", "narcobloqueos",
"narcolaboratorio", "campamento",
"narcocampamento", "narco-polleria")
v_narcomensaje    <- c("narcomensajes", "narcomensaje", "mensaje mediante grabacion",
"mensaje", "narcomensaje", "mensaje",
"narco mensaje \"limpieza social\"", "narcomanta",
"narco manta \r\n", "arias cartulinas con mensajes amenazantes.",
"narcomensaje\r\n", "narcomensaje \r\n",
"narcomanta \r\n", "cuerpo  con mensaje", "mensaje",
"mensaje mediante grabacion", "narco mensaje")
v_amaneza          <- c("amenazas")
# Violencia familiar y género
v_genero           <- c("intento de violacion", "posible feminicidio",
"violacion", "presunto feminicidio", "violencia familiar",
"violencia de genero", "violencia de genero0",
" violencia genero", "familiar", "genero",
"   violencia familiar", "violencia familiar/ violencia genero\r\n",
"posible feminicidio", "violencia familiar", "violencia familiar\r\n",
"violencia familiar/ violencia genero")
# Agresiones contra prensa
v_periodistas      <- c("agresion a reporteros", "acciones libertad de prensa")
# Agresión en general
v_agresion         <- c("agresion a vehiculo", "agresion", "agresion a vivienda",
"ataque a vehiculo", "disparos vivienda", "disparos negocios",
" agresion a vehiculo", "disparos negocios",
"disparos negocios", "disparos vivienda\r\n")
# Lugares
v_centro           <- c("centro de rehabilitacion")
v_penitenciario    <- c("situacion en sistema penitenciario", "motin centro penitenciario",
"cuerpo detenido", "muerto detenido")
nombres_otra <- function(x) {
case_when(
x %in% v_menoredad        ~  "menor de edad",
x %in% v_autodefensas     ~  "autodefensas",
x %in% v_detautoridad     ~  "detencion de autoridades",
x %in% v_abusodeautoridad ~  "abuso de autoridad",
x %in% v_agresionauto     ~  "agresion contra autoridades",
x %in% v_actiauto         ~  "actividad de las autoridades",
x %in% v_persecucion      ~  "persecucion",
x %in% v_desparecidxs     ~  "desaparecidos/as",
x %in% v_secuestro        ~  "secuestro",
x %in% v_fosas            ~  "fosas clandestinas",
x %in% v_incendio         ~  "incendio/explosivos",
x %in% v_robo             ~  "robo/asaltos",
x %in% v_corrupcion       ~  "corrupcion",
x %in% v_fraude           ~  "fraude",
x %in% v_extorsion        ~  "extorsion",
x %in% v_sustancias       ~  "sustancias",
x %in% v_traflorfau       ~  "trafico de flora/fauna",
x %in% v_huachicol        ~  "huachicol",
x %in% v_personas         ~  "trafico de personas",
x %in% v_narcoactividades ~  "narcoactividades",
x %in% v_amaneza          ~  "amanezas",
x %in% v_genero           ~  "violencia familiar/genero",
x %in% v_periodistas      ~  "agresion contra la prensa",
x %in% v_agresion         ~  "agresiones",
x %in% v_centro           ~  "centro de rehabilitacion",
x %in% v_penitenciario    ~  "centro penitenciario",
x %in% v_narcomensaje     ~  "narcomensaje",
x == x ~ x
)
}
df_crudo_li <- df_crudo %>%
mutate_at(.vars = c("otra1", "otra2", "observaciones"),
.funs = ~nombres_otra(.))
# Valores similares en columnas distintas en la misma observacion
df_crudo_li2 <- df_crudo_li %>%
mutate(otra2 = if_else(otra2 == otra1, NA_character_, otra2))
# Detalles
# ID y orden
df_limpio <- df_crudo_li2 %>%
mutate(id = 1:length(df_crudo_li$mes)) %>%
select(id, estado, claveEdo, fecha,  mes, anio, titulo_nota, enlace, enlace_relacionado,
violencia_armada_fuego, homicidios, heridxs, genero, presencia_criminal,
actividades_delictivas, detenciones, acciones_gubernamentales, politica_seguridad,
otra1, otra2) %>%
rename("heridos_as" = "heridxs") %>%
filter(mes != "07")
# se deja fuera observaciones por indicaciones de LA 08/08/23
# 3. Base limpia----------------------------------------------------------------
# Microdatos:
# openxlsx::write.xlsx(df_limpio,
#                     file = paste_out("monitor.abril_junio2023.xlsx"))
# 4. Base panel
df_limpio$violencia_armada_fuego   <- as.numeric(df_limpio$violencia_armada_fuego)
df_limpio$homicidios               <- as.numeric(df_limpio$homicidios)
df_limpio$heridos_as               <- as.numeric(df_limpio$heridos_as)
df_limpio$genero                   <- as.numeric(df_limpio$genero)
df_limpio$presencia_criminal       <- as.numeric(df_limpio$presencia_criminal)
df_limpio$actividades_delictivas   <- as.numeric(df_limpio$actividades_delictivas)
df_limpio$detenciones              <- as.numeric(df_limpio$detenciones)
df_limpio$acciones_gubernamentales <- as.numeric(df_limpio$acciones_gubernamentales)
df_limpio$politica_seguridad       <- as.numeric(df_limpio$politica_seguridad)
# por mes
df_dp_m <- df_limpio %>%
group_by(mes, estado, claveEdo) %>%
summarise(violencia_armada_fuego   = sum(violencia_armada_fuego, na.rm = TRUE),
homicidios               = sum(homicidios, na.rm = TRUE),
heridos_as               = sum(heridos_as, na.rm = TRUE),
genero                   = sum(genero, na.rm = TRUE),
presencia_criminal       = sum(presencia_criminal, na.rm = TRUE),
actividades_delictivas   = sum(actividades_delictivas, na.rm = TRUE),
detenciones              = sum(detenciones, na.rm = TRUE),
acciones_gubernamentales = sum(acciones_gubernamentales, na.rm = TRUE),
politica_seguridad       = sum(politica_seguridad, na.rm = TRUE))
# de largo a ancho
df_dp_m2 <- df_dp_m %>%
pivot_longer(cols = -c(mes,estado, claveEdo), names_to = "tipo", values_to = "total") %>%
pivot_wider(names_from = c(tipo, mes), values_from = total)
View(df_limpio)
View(df_dp_m2)
f_dp_c <- df_limpio %>%
group_by(estado, claveEdo) %>%
summarise(violencia_armada_fuego   = sum(violencia_armada_fuego, na.rm = TRUE),
homicidios               = sum(homicidios, na.rm = TRUE),
heridos_as               = sum(heridos_as, na.rm = TRUE),
genero                   = sum(genero, na.rm = TRUE),
presencia_criminal       = sum(presencia_criminal, na.rm = TRUE),
actividades_delictivas   = sum(actividades_delictivas, na.rm = TRUE),
detenciones              = sum(detenciones, na.rm = TRUE),
acciones_gubernamentales = sum(acciones_gubernamentales, na.rm = TRUE),
politica_seguridad       = sum(politica_seguridad, na.rm = TRUE))
View(f_dp_c)
openxlsx::write.xlsx(f_dp_c,
file = paste_out("ppd.monitor.abril_junio2023.xlsx"))
f_dp_c <- df_limpio %>%
group_by(mes) %>%
summarise(violencia_armada_fuego   = sum(violencia_armada_fuego, na.rm = TRUE),
homicidios               = sum(homicidios, na.rm = TRUE),
heridos_as               = sum(heridos_as, na.rm = TRUE),
genero                   = sum(genero, na.rm = TRUE),
presencia_criminal       = sum(presencia_criminal, na.rm = TRUE),
actividades_delictivas   = sum(actividades_delictivas, na.rm = TRUE),
detenciones              = sum(detenciones, na.rm = TRUE),
acciones_gubernamentales = sum(acciones_gubernamentales, na.rm = TRUE),
politica_seguridad       = sum(politica_seguridad, na.rm = TRUE))
=======
aes(x = mes, y = total, group = estado)) +
# Geoms
geom_line(size = 1, color = "#98989A") +
geom_point(size = 2, color = "#6F7271") +
geom_text(
aes(label = if_else((df_plot2$estado %in% v_max) & df_plot2$mes == "dic",
estado, NA_character_)), family = "Gotham", color = "black",
nudge_x = 0.2, nudge_y = 8) +
# Etiquetas
labs(
title = "Homicidios violentos en México",
subtitle = "Junio - Diciembre 2022\n",
x = "",
y = "",
caption = v_caption
) +
# Etiquetas
scale_y_continuous(label = scales::comma_format()) +
# Tema
tema
# Guardar
ggsave(file = paste_fig("reporte_2022/03d_homicidios_serie_estados.png"))
## 3.2 Homicidos por criterios -------------------------------------------------
#### Nacional ------------------------------------------------------------------
# PREGUNTA PARA MAILOBSKY: La variable ataque_armado_clean tiene algunos de los
# eventos incluidos en la gráfica del reporte, pero no los incluye todos y
# también incluye valores nuevos.
v_eventos <- unique(df_homicidios$ataque_armado_clean) # 12 tipos de eventos
table(df_homicidios$ataque_armado_clean)
df_arma <- df_homicidios %>%
filter(ataque_armado_clean  == "agresión con arma de fuego")
table(df_arma$homic_total)
df_cuerpos <- df_homicidios     %>%
ungroup()                     %>%
summarise(total = sum(cuerpos_localizados, na.rm = TRUE)) %>%
mutate(evento = "Cuerpos localizados")
df_plot3 <- df_homicidios %>%
mutate(evento = ataque_armado_clean) %>%
group_by(evento) %>%
summarise(total = sum(homic_total, na.rm = TRUE)) %>%
drop_na() %>%
ungroup() %>%
# mutate(evento = if_else(total < 20, "Otros", evento)) %>%
group_by(evento) %>%
summarise(total = sum(total, na.rm = TRUE)) %>%
bind_rows(df_cuerpos) %>%
mutate(evento = str_to_title(evento))
# table(df_homicidios$cuerpos_localizados)
ggplot(
# Datos
df_plot3,
# Coordenadas
aes(x = total, y = reorder(evento, total))) +
# Geoms
geom_col() +
geom_text(aes(label = scales::comma(total)), vjust = +0.4,
hjust = if_else(df_plot3$total<max(df_plot3$total), -0.2, 1.2),
color = if_else(df_plot3$total<max(df_plot3$total), "#6F7271", "white"),
family = "Gotham") +
# Etiquetas
labs(
title = "Homicidios violentos en México",
subtitle = "Por tipo de evento, Junio - Diciembre 2022\n",
x = "",
y = "",
caption = v_caption
) +
# Etiquetas
scale_x_continuous(label = scales::comma_format()) +
# Tema
tema +
theme(axis.text.x = element_text(angle = 0))
# Guardar
ggsave(file = paste_fig("reporte_2022/08a_homicidios_tipos.png"))
#### Estatal -------------------------------------------------------------------
#
df_cuerpos_estados <- df_homicidios                         %>%
ungroup()                                                 %>%
group_by(estado)                                          %>%
summarise(total = sum(cuerpos_localizados, na.rm = TRUE)) %>%
mutate(evento = "Cuerpos localizados") %>%
filter(!is.na(estado), estado != "20")
df_plot4 <- df_homicidios                                   %>%
mutate(evento = ataque_armado_clean)                      %>%
group_by(estado, evento)                                  %>%
summarise(total = sum(homic_total, na.rm = TRUE))         %>%
drop_na()                                                 %>%
ungroup()                                                 %>%
bind_rows(df_cuerpos_estados)                             %>%
mutate(evento = str_to_title(evento))                     %>%
filter(!is.na(estado), estado != "20")                    %>%
mutate(
estado = str_remove_all(estado, "[:digit:]"))
# ggplot(
#   # Datos
#   df_plot4,
#   # Coordenadas
#   aes(x = total, y = evento)) +
#   facet_wrap(~estado) +
#   # Geoms
#   geom_col() +
#   geom_text(aes(label = scales::comma(total)), vjust = +0.4,
#             # hjust = if_else(df_plot3$total<max(df_plot3$total), -0.2, 1.2),
#             # color = if_else(df_plot3$total<max(df_plot3$total), "#6F7271", "white"),
#             family = "Gotham") +
#   # Etiquetas
#   labs(
#     title = "Homicidios violentos en México",
#     subtitle = "Por tipo de evento, Junio - Diciembre 2022\n",
#     x = "",
#     y = "",
#     caption = v_caption
#   ) +
#   # Etiquetas
#   scale_x_continuous(label = scales::comma_format()) +
#   # Tema
#   tema +
#   theme(axis.text.x = element_text(angle = 0))
#
# ggsave(file = paste_fig("reporte_2022/08b_homicidios_tipos.png"),
#        width = 15, height = 8)
ggplot(
# Datos
df_plot4,
# Coordenadas
aes(x = total, y = estado)) +
facet_wrap(~evento, ncol = 5, scales = "free_x", labeller = label_wrap_gen(width = 16)) +
# Geoms
geom_col() +
# geom_text(aes(label = scales::comma(total)), vjust = +0.4,
#           family = "Gotham") +
# Etiquetas
labs(
title = "Homicidios violentos en México",
subtitle = "Por tipo de evento, Junio - Diciembre 2022\n",
x = "",
y = "",
caption = v_caption
) +
# Etiquetas
scale_x_continuous(label = scales::comma_format()) +
scale_y_discrete(limits=rev) +
# Tema
tema +
theme(axis.text.x = element_text(angle = 0))
ggsave(file = paste_fig("reporte_2022/08b_homicidios_tipos.png"),
width = 15, height = 15)
# 4. Grupos criminales ---------------------------------------------------------
# NOTA: LA base de grupos no está limpia porque no he limpiado los nombres,
# pero tampoco he puesto los filtros de tiempo (que sea de junio a diciembre).
## 4.1. Separar grupos en distintas columnas -----------------------------------
# Identificar cuál es el máximo de grupos incluidos en una sola observación
# dentro de la variable "grupo_criminal". Se hace contando los ";"
df_semicolon <- df_crudo %>%
mutate(
# Reemplazar casos donde haya dos puntos (:) por punto y coma (;)
grupo_criminal = str_replace_all(grupo_criminal, ":", ";"),
# Contar número de puntos y comas (;)
semicolon = str_count(grupo_criminal, ";")) %>%
select(id, semicolon)
max(df_semicolon$semicolon, na.rm = T) # El máximo es 10 grupos criminales
# Separar los nombres de los grupos criminales en columnas independientes
df_nombres <- df_crudo %>%
mutate(grupo_criminal = str_replace_all(grupo_criminal, ":", ";")) %>%
separate(grupo_criminal, sep = ";", c("grupo1",
"grupo2",
"grupo3",
"grupo4",
"grupo5",
"grupo6",
"grupo7",
"grupo8",
"grupo9",
"grupo10"))
## 4.2. Limpiar nombres --------------------------------------------------------
# ---- Agrupar todos los nombres distintos
v_grupos <- unique(
c(df_nombres$grupo1, df_nombres$grupo2, df_nombres$grupo3, df_nombres$grupo4,
df_nombres$grupo5, df_nombres$grupo6, df_nombres$grupo7, df_nombres$grupo8,
df_nombres$grupo9, df_nombres$grupo10))
# Hay muchos casos donde el nombre comienza con un espacio (" ")
# ---- Funciones de limpieza
# Función para clasificar si es un grupo armado, autodefensas o un alias
clasificar_grupos <- function(x){
# ---- Vectores con las clasificaciones
v_gruposin <- c(
"Sujetos armados", "Banda de homicidas en Perote", "célula delictiva",
"Narcomenudistas", "13 células delictivas", "Civiles Armados", "grupo armado",
"Sin especificar", "sin especificar")
v_autodefensas <- c(
"Columna Armada del General Pedro José Méndez",
'Columna Armada Pedro José Méndez',
"Columna Armada Pedro José Méndez",
"Resistencia Civil de Baja California",
"Autodefensa Fuerza Territorial Poblana",
"Fuerza Territorial Poblana",
"Unión de Pueblos y Organizaciones del Estado de Guerrero (UPOEG)",
'Octavio L. alias "Tarzán" líder de autodefensas de Tamaulipas',
" Unión de Pueblos y Organizaciones del Estado de Guerrero (UPOEG)")
v_alias <- c(
"Julio Adrián, también conocido como ‘El Mercy’", "‘El Pollo’",
"‘El Smoll’", "El Panchito", "El Cholo", "Cipog-ez", "‘Zague’.",
"Don Cabezón", "Oscar Ivan Maras", "el Payepas","El Damaso",
"El Moyo", "El Jaibol", "“el Santa”", "‘Checo’", "Efraín, alias 'El Gato'",
"“El Yogui”", "“El Kinkis”", "\"El Bocho\"", "El Vampi",
"“El Pillo”, apenas había tomado el poder en sustitución de recién capturado y peligroso líder narcomenudista “El Croquis”",
"“El Bengala”", "El Ruso", "\"El Rana\" y \"El Gus\"", "La Zorra",
"El Colas","‘El Chuy’, ‘El Muerto’ y ‘El Jarro’", "El Grillo",
"“El Huevo”", "Fabián N alias \"El Pelón\"", "“La Pegui” y/o “La Sombra”",
"‘El Carlitos’", "El Kaiman", "El Dany", "El Diablo", "\"El Negro\"",
"El Komander", "“El Color\"", "“El Merla”", "“El Pelón”.", "el pistolas",
"Cristian Alberto “N”, alias “El Bozo” o “El Alondra”",
"\"El Carnitas\"", "\"El Carolo\"", "el Cantinflas", "Juan Antonio \"N\", alias \"Mares\" o \"Tambor\"",
"El Caimán", "La China", "el pepillo", "El Bolas", "El Bader", "El Tuerto",
"hermanos Barrera Estrada", "\"El Rata\"", "\"El Manzano\"", "“El Metales\"",
"“El Papirrín”", "El Perico", "“El Chavurras”", "El Cebollas", "Sierra 3",
"“El Pinky\"", "\"El Roy\"", "Leonardo León ‘N’, alias “El Vainilla”",
"El Dueñas", "‘El Chino’", "“El Mudo”", "El Tiko", "“El Parkita”", "\"El Hacha\"",
"‘La Platita’ y ‘El Gargamel’", "Jesús Isaac “N”, alías “El Chamán”", "“El Pato”",
"'El Lavadoras'", "“El Coco” y/o “El Tío”", "‘El Toro’", "“La Mariana” y/o “El Charly”",
"La Má",  "El Toñín", "El Toñín", "El Richi", "Los Juanchos (líder El Pirata)",
"Güicho el de Los Reyes", "El Tufito", "El Padrino Jr.", "el “Mulix”", "Toda la Sierra",
"líder huachicolero Antonio Martínez Fuentes, alias “El Toñín”.",  "El Gordo Fresa", "El Fantasma",
"El Pavón", "Guasón Poblano","El Guasón", "El Vago", "El Marrano", "El Trucha",
" “El Acople”", " El Fresa", "“El Camacho”")
# Condicioneales para limpieza
case_when(
x %in% v_gruposin     ~ "grupo armado",
x %in% v_autodefensas ~ "autodefensas",
x %in% v_alias        ~ "alias",
x  == x ~ x
)
}
# Función para limpiar nombres de grupos armados
limpiar_grupos <- function(x){
case_when(
x  == "‘La Línea’ o Nuevo Cártel de Juárez (NCDJ)" ~ "La Línea",
x  == " La Línea" ~ "La Línea",
x  == "Grupo Delta/Gente Nueva"  ~ "Grupo Delta",
x  == "Grupo de Huachicol del Pelón del Sur" ~ "Banda del Pelón del Sur",
x  == "El Pelón del Sur" ~ "Banda del Pelón del Sur",
x  == "Los capetos"  ~ "Los Capetos",
x  == "Gente Nueva de los Salazar"  ~ "Los Salazar",
x  == "Gente Nueva Salazar"  ~ "Los Salazar",
x  == "La banda de “El Negro”"  ~ "Banda de El Negro",
x  == "banda delictiva de “Los Chinos”"  ~ "Los Chinos",
x  == "Los salazar"  ~ "Los Salazar",
x  == "Los Salazares"  ~ "Los Salazar",
x  == "Los Salazares"  ~ "Los Salazar",
x  == "Cártel Jalisco"  ~ "Cártel Jalisco Nueva Generación (CJNG)",
x  == " Cártel Jalisco Nueva Generación"  ~ "Cártel Jalisco Nueva Generación (CJNG)",
x  == " CJNG"  ~ "Cártel Jalisco Nueva Generación (CJNG)",
x  == "CJNG"  ~ "Cártel Jalisco Nueva Generación (CJNG)",
x  == " El Cártel Jalisco Nueva Generación"  ~ "Cártel Jalisco Nueva Generación (CJNG)",
x  == "cártel Jalisco Nueva Generación" ~ "Cártel Jalisco Nueva Generación (CJNG)",
x  == "Cártel Jalisco Nueva Generación"  ~ "Cártel Jalisco Nueva Generación (CJNG)",
x  == "el Cantinflas; CJNG"  ~ "Cártel Jalisco Nueva Generación (CJNG)",
x  == "Los pájaros sierra"  ~ "Pájaros Sierra",
x  == " líder de Pájaros Sierra"  ~ "Pájaros Sierra",
x  == "Cártel Los Alemanes de Los Zetas" ~ "Cártel Los Alemanes",
x  == "Cártel de Los Alemanes" ~ "Cártel Los Alemanes",
x  == "banda \"La bolsa negra\""  ~ "Grupo La Bolsa Negra",
x  == "'El Víbora', presunto lugarteniente de 'El Bukanas'"  ~ "Grupo de El Bukanas",
x  == " El Bukanas"  ~ "Grupo de El Bukanas",
x  == "'El Loco Téllez'"  ~ "Grupo de El Loco Téllez",
x  == "El Loco Téllez"  ~ "Grupo de El Loco Téllez",
x  == " Célula Delictiva del Loco Téllez"  ~ "Grupo de El Loco Téllez",
x  == "gente de \"El Grillo\""  ~ "Banda de El Grillo",
x  == "banda de “Los Cucos”"  ~ "Banda de Los Cucos",
x  == "Cártel Arellano Félix"  ~ "Cártel de Los Arellano Félix",
x  == "Juan Antonio \"N\", alias \"Mares\" o \"Tambor\"; parte de una célula de integrantes remanentes del CSRDL"  ~ "Cártel de Santa Rosa de Lima",
x  == " parte de una célula de integrantes remanentes del CSRDL"  ~ "Cártel de Santa Rosa de Lima",
x  == "Cártel de H. Matamoros"  ~ "Cártel del Golfo",
x  == "“Los Lampones\""  ~ "Los Lampones",
x  == "Unión Tepito"  ~ "La Unión Tepito",
x  == "La familia Michoacana"  ~ "La Familia Michoacana",
x  == " La Familia Michoacana"  ~ "La Familia Michoacana",
x  == " Familia Michacana"  ~ "La Familia Michoacana",
x  == " Familia Michoacana"  ~ "La Familia Michoacana",
x  == "La empresa"  ~ "La Empresa",
x  == "Los Mexicles o Los Aztecas"  ~ "Los Mexicles",
x  == "banda de Los Platanitos"  ~ "Banda de Los Platanitos",
x  == "La unión de los fantasmas" ~ "La Unión de los Fantasmas",
x  == "Cártel del Abuelo Farías" ~ "Cártel de Tepalcatepec",
x  == "“El Abuelo”" ~ "Cártel de Tepalcatepec",
x  == "Guardia Guerrerense, antes Templarios." ~ "Guardia Guerrerense",
x  == "‘Los Tarzanes’ o ‘Los Sinaloa’" ~ "Los Sinaloa",
x  == "\"La Reina de los Sinaloas\"" ~ "Los Sinaloa",
x  == "alias \"El Mayo\"" ~ "Cártel de Sinaloa",
x  == "grupo del Chapos Trini" ~ "Cártel de Sinaloa",
x  == "Los Chapos Trinis" ~ "Cártel de Sinaloa",
x  == "Los Chapitos" ~ "Cártel de Sinaloa / Los Chapitos",
x  == "grupo El Jale Azul / El Sargento Huracán" ~ "Grupo El Jale Azul",
x  == "Escorpiones" ~ "Grupo Scorpion",
x  == "La Plaza" ~ "Cártel La Plaza",
x  == "los viagras" ~ "Los Viagras",
x  == " Los Viagras" ~ "Los Viagras",
x  == "Los correa" ~ "Cártel de los Correa",
x  == "Los Correa" ~ "Cártel de los Correa",
x  == " Célula delictiva del Mamer" ~ "Grupo del Mamer",
x  == " los caballeros templarios" ~ "Caballeros Templarios",
x  == " Los Caballeros Templarios" ~ "Caballeros Templarios",
x  == x ~ x
)
}
# ---- Recodificar nombres con funciones
df_nombres_limpios <- df_nombres %>%
# Crear variables con tipo de clasificación
mutate(across(starts_with("grupo"), ~clasificar_grupos(.))) %>%
# Limpiar nombres específicos de grupos criminales
mutate(across(starts_with("grupo"), ~limpiar_grupos(.)))  %>%
# Quitar espacios en blanco al inicio y final (función trimws)
mutate(across(starts_with("grupo"), ~trimws(.))) %>%
# Convertir autodefensas, alias y guardia civil a NAs
mutate(across(starts_with("grupo"), ~if_else(. %in% c("autodefensas",
"alias",
"Guardia Civil"),
NA_character_, .)))
# ---- Agrupar todos los nombres distintos después de la limpieza
v_grupos_limpios <- unique(
c(df_nombres_limpios$grupo1, df_nombres_limpios$grupo2,
df_nombres_limpios$grupo3, df_nombres_limpios$grupo4,
df_nombres_limpios$grupo5, df_nombres_limpios$grupo6,
df_nombres_limpios$grupo7, df_nombres_limpios$grupo8,
df_nombres_limpios$grupo9, df_nombres_limpios$grupo10))
## 4.3. Mapa -------------------------------------------------------------------
# ---- Contar grupos criminales distintos por entidadad federativa
# Quitar nombres dañados de entidades
df_estados <- df_nombres_limpios %>%
filter(!is.na(estado), estado != "20") %>%
# Filtrar periodo de tiempo
mutate(
mes     = lubridate::month(fecha_de_publicacion),
year_m  = zoo::as.yearmon(paste0(anio, "-", mes)),
mes = lubridate::month(fecha_de_publicacion, label = TRUE)) %>%
filter(mes != "ene")
# Guardar los nombres de todas las entidades
v_estados <- unique(df_estados$estado)
# Data frame vacío para pegar resultados
df_grupos_entidad <- data.frame()
# Bucle de limpieza por estado
for(i in 1:length(v_estados)){
# Imprimir vuelta
print(paste0("Vuelta ", i, ": ", v_estados[i]))
# Filtrar base y dejar solo una entidad
df_entidad <- df_estados                  %>%
filter(estado == v_estados[i])
# Guardar un vector con los nombres únicos de grupo por entidad
v_grupos_estado <- unique(
c(df_entidad$grupo1, df_entidad$grupo2,
df_entidad$grupo3, df_entidad$grupo4,
df_entidad$grupo5, df_entidad$grupo6,
df_entidad$grupo7, df_entidad$grupo8,
df_entidad$grupo9, df_entidad$grupo10))
# Quitar valor NA
v_grupos_estado <- v_grupos_estado[!is.na(v_grupos_estado)]
# Guardar información en un data frame
df_grupos_entidad <- df_grupos_entidad    %>%
bind_rows(data.frame(estado = v_estados[i],
total_grupos = length(v_grupos_estado)))
}
# View(df_grupos_entidad)
# ---- Pegar datos geo
df_mapa2 <- df_grupos_entidad               %>%
mutate(region = str_sub(estado, -2, -1))  %>%
left_join(mxstate.map, by = "region")
# ---- Graficar mapa
ggplot(
# Datos
df_mapa2 %>% mutate(total_grupos = if_else(total_grupos == 0, NA_integer_, total_grupos)),
# Coordenadas
aes(long, lat, group = group, fill = total_grupos)) +
coord_map() +
geom_polygon(color = "black", size = .2, show.legend = T, alpha = 1) +
labs(title = "Presencia criminal en México",
subtitle = "Entre Junio - Diciembre 2022\n",
fill = "Número de grupos criminales",
caption = "Fuente: Monitor-PPD (2022)") +
# scale_fill_gradient(low=cols[1],high=cols[2]) +
scale_fill_gradient(low = "#7FCCA1", high = "#193F29", na.value = "white",
breaks = seq(0, 40, 10)) +
# Tema
tema +
# Quitar fondo al mapa
theme(axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = NA)) +
# Ampliar largo de la barra
theme(legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(1,"cm"))
ggsave(file = paste_fig("reporte_2022/04_grupos_mapa.png"))
## 4.4. Barras -----------------------------------------------------------------
# Gráfica
ggplot(
# Datos
df_grupos_entidad %>%
rename(total = total_grupos) %>%
mutate(estado = str_remove_all(estado, "[:digit:]")),
aes(x = total, y = reorder(estado, total))) +
# Geoms
geom_col(fill = "#193F29") +
geom_text(aes(label = scales::comma(total)), vjust = 0.4, size = 3.5,
hjust = if_else(df_grupos_entidad$total<max(df_grupos_entidad$total), -0.4, 1.3),
color = if_else(df_grupos_entidad$total<max(df_grupos_entidad$total), "#6F7271", "white"),
family = "Gotham") +
# Etiquetas
labs(title = "Presencia criminal en México",
subtitle = "Entre Junio - Diciembre 2022\n",
x = "\nNúmero de grupos criminales registrados",
y = "",
caption = "Fuente: Monitor-PPD (2022)") +
# Escalas
scale_x_continuous(label = scales::comma_format()) +
# Tema
tema +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
# Guardar
ggsave(file = paste_fig("reporte_2022/05_grupos_barras.png"))
# 5. Alianzas y rivales --------------------------------------------------------
# 6. Desaparecidos -------------------------------------------------------------
#### Mapa ----------------------------------------------------------------------
table(df_crudo$desapariciónsecuestro)
table(df_crudo$numero_personas_desaparecidas)
df_desaparecidos <- df_crudo %>%
mutate(
mes     = lubridate::month(fecha_de_publicacion),
year_m  = zoo::as.yearmon(paste0(anio, "-", mes)),
mes = lubridate::month(fecha_de_publicacion, label = TRUE)) %>%
# Filtrar meses de interés
filter(mes != "ene") %>%
select(estado, numero_personas_desaparecidas) %>%
group_by(estado) %>%
summarize(total_desparecidos = sum(numero_personas_desaparecidas, na.rm = T)) %>%
mutate(region = str_sub(estado, -2, -1),
total_desparecidos = if_else(total_desparecidos == 0, NA_real_, total_desparecidos)) %>%
left_join(mxstate.map, by = "region")
#  Figura
cols <- RColorBrewer::brewer.pal(3,'Blues')[c(1,3)]
ggplot(
# Datos
df_desaparecidos,
# Coordenadas
aes(long, lat, group = group, fill = total_desparecidos)) +
coord_map() +
geom_polygon(color = "black", size = .2, show.legend = T, alpha = 1) +
labs(title = "Personsas desaparecidas y/o sin localizar en México",
subtitle = "Entre Junio - Diciembre 2022\n",
fill = "Número",
caption = "Fuente: Monitor-PPD (2022)") +
# scale_fill_gradient(low=cols[1],high=cols[2]) +
scale_fill_gradient(low = "#B6C5CE", high = "#182025", na.value = "white") +
# Tema
tema +
# Quitar fondo al mapa
theme(axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = NA)) +
# Ampliar largo de la barra
theme(legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(1,"cm"))
ggsave(file = paste_fig("reporte_2022/06_desapariciones_mapa.png"))
#### Barras --------------------------------------------------------------------
df_barras <- df_crudo                                               %>%
# variables de interés
select(estado, numero_personas_desaparecidas)                     %>%
group_by(estado)                                                  %>%
summarize(total = sum(numero_personas_desaparecidas, na.rm = T))  %>%
drop_na()                                                         %>%
filter(estado != "20") %>%
mutate(estado = str_remove_all(estado, "[:digit:]"))
ggplot(
# Datos
df_barras,
# Coordenadas
aes(x = total, y = reorder(estado, total))) +
# Geoms
geom_col(fill = "#182025") +
geom_text(aes(label = scales::comma(total)), vjust = +0.4,
hjust = if_else(df_barras$total<max(df_barras$total), -0.2, 1.2),
color = if_else(df_barras$total<max(df_barras$total), "#6F7271", "white"),
family = "Gotham") +
# Etiquetas
labs(title = "Personas desaparecidas y/o sin localizar en México",
subtitle = "Entre Junio - Diciembre 2022\n",
fill = "Número",
x = "",
y = "",
caption = "Fuente: Monitor-PPD (2022)") +
# Escalas
scale_x_continuous(label = scales::comma_format()) +
# Tema
tema +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
ggsave(file = paste_fig("reporte_2022/07_desapariciones_barras.png"))
# 7. Autoridades ---------------------------------------------------------------
# Juntar todas las autoridades registradas
v_autoridades <- unique(
c(df_crudo$autoridad1, df_crudo$autoridad2, df_crudo$autoridad3,
df_crudo$autoridad4, df_crudo$autoridad5))
# Lista de autoridades civiles
# Lista de autoridades militares
# FIN. -------------------------------------------------------------------------
>>>>>>> Stashed changes
