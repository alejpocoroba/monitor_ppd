panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position  = "top",
legend.title     = element_text(size = 8, face = "bold", family="Fira Sans"),
legend.text      = element_text(size = 10, family="Fira Sans"),
axis.title.x     = element_text(size = 10, hjust = .5, margin = margin(1,1,1,1), family="Fira Sans"),
axis.title.y     = element_text(size = 10, hjust = .5, margin = margin(1,1,1,1), family="Fira Sans", angle = 90),
axis.text.y      = element_text(size = 8, family="Fira Sans", angle=0, hjust=1),
axis.text.x      = element_text(size = 8, family="Fira Sans", angle=0, hjust=.5),
strip.background = element_rect(fill="white", colour = NA),
strip.text.x     = element_text(size=9, family = "Fira Sans", face = "bold", color = "black"),
strip.text.y     = element_text(size=9, family = "Fira Sans", face = "bold", color = "black"))
# ---- Colores
# ---- Vectores de texto
v_caption <- "Fuente: Elaboracón propia con datos del Monitor-PPD 2022"
## 3.1. Sonora (Caro Quintero) -------------------------------------------------
# ---- Fecha de arresto de caro quintero
v_arresto <- unique(df_limpio$fecha[df_limpio$arresto_caro == 1])
# ---- Filtrar datos
df_data <- df_limpio %>% filter(str_detect(estado, "Sonora"),
!str_detect(evento, "detenidas"),
# !str_detect(evento, "heridas"),
fecha >= as.Date("2022-06-01"))
# ---- Visualización
ggplot(
# Datos
df_data,
# Coordenadas
aes(x = fecha, y = total, group = evento, color = evento)) +
facet_wrap(~evento, ncol = 1) +
# Geoms
geom_line() +
geom_point() +
geom_vline(xintercept = v_arresto, linetype = "dashed") +
annotate("text", x = v_arresto + 100000, y = 14,
# label = if_else(df_data$evento == "Homicidios", "Arresto de Caro Quintero", NA_character_),
label = "Arresto de Caro Quintero",
size = 3, family = "Fira Sans", color = "#666666", hjust = 0) +
# geom_vline(xintercept = as.Date("2022-07-15"), linetype = "dashed") +
# Etiquetas
labs(
title    = "Eventos delictivos ocurridos en Sonora",
subtitle = "Diario y por tipo de evento\n",
x = "",
y = "Número total de eventos\n",
color = "",
caption = v_caption
) +
# Escalas
# scale_y_continuous(breaks = seq(0, 15, 2)) +
# Tema
tema +
theme(legend.position = "none")
# ---- Guardar figura
ggsave(file = paste_fig("quintero.png"),
width = 6, height = 5)
df_data <- df_limpio %>% filter(str_detect(estado, "Sonora"),
# !str_detect(evento, "detenidas"),
!str_detect(evento, "heridas"),
fecha >= as.Date("2022-06-01"))
# ---- Visualización
ggplot(
# Datos
df_data,
# Coordenadas
aes(x = fecha, y = total, group = evento, color = evento)) +
facet_wrap(~evento, ncol = 1) +
# Geoms
geom_line() +
geom_point() +
geom_vline(xintercept = v_arresto, linetype = "dashed") +
annotate("text", x = v_arresto + 100000, y = 14,
# label = if_else(df_data$evento == "Homicidios", "Arresto de Caro Quintero", NA_character_),
label = "Arresto de Caro Quintero",
size = 3, family = "Fira Sans", color = "#666666", hjust = 0) +
# geom_vline(xintercept = as.Date("2022-07-15"), linetype = "dashed") +
# Etiquetas
labs(
title    = "Eventos delictivos ocurridos en Sonora",
subtitle = "Diario y por tipo de evento\n",
x = "",
y = "Número total de eventos\n",
color = "",
caption = v_caption
) +
# Escalas
# scale_y_continuous(breaks = seq(0, 15, 2)) +
# Tema
tema +
theme(legend.position = "none")
# ---- Guardar figura
ggsave(file = paste_fig("quintero.png"),
width = 6, height = 5)
df_data <- df_limpio %>% filter(str_detect(estado, "Sonora"),
!str_detect(evento, "detenidas"),
# !str_detect(evento, "heridas"),
fecha >= as.Date("2022-06-01"))
# ---- Visualización
ggplot(
# Datos
df_data,
# Coordenadas
aes(x = fecha, y = total, group = evento, color = evento)) +
facet_wrap(~evento, ncol = 1) +
# Geoms
geom_line() +
geom_point() +
geom_vline(xintercept = v_arresto, linetype = "dashed") +
annotate("text", x = v_arresto + 100000, y = 14,
# label = if_else(df_data$evento == "Homicidios", "Arresto de Caro Quintero", NA_character_),
label = "Arresto de Caro Quintero",
size = 3, family = "Fira Sans", color = "#666666", hjust = 0) +
# geom_vline(xintercept = as.Date("2022-07-15"), linetype = "dashed") +
# Etiquetas
labs(
title    = "Eventos delictivos ocurridos en Sonora",
subtitle = "Diario y por tipo de evento\n",
x = "",
y = "Número total de eventos\n",
color = "",
caption = v_caption
) +
# Escalas
# scale_y_continuous(breaks = seq(0, 15, 2)) +
# Tema
tema +
theme(legend.position = "none")
# ---- Guardar figura
ggsave(file = paste_fig("quintero.png"),
width = 6, height = 5)
df_data <- df_limpio %>% filter(str_detect(estado, "Sonora"),
!str_detect(evento, "detenidas"),
# !str_detect(evento, "heridas"),
fecha >= as.Date("2022-06-01"),
fecha <= as.Date("2022-08-31"))
ggplot(
# Datos
df_data,
# Coordenadas
aes(x = fecha, y = total, group = evento, color = evento)) +
facet_wrap(~evento, ncol = 1) +
# Geoms
geom_line() +
geom_point() +
geom_vline(xintercept = v_arresto, linetype = "dashed") +
annotate("text", x = v_arresto + 100000, y = 14,
# label = if_else(df_data$evento == "Homicidios", "Arresto de Caro Quintero", NA_character_),
label = "Arresto de Caro Quintero",
size = 3, family = "Fira Sans", color = "#666666", hjust = 0) +
# geom_vline(xintercept = as.Date("2022-07-15"), linetype = "dashed") +
# Etiquetas
labs(
title    = "Eventos delictivos ocurridos en Sonora",
subtitle = "Diario y por tipo de evento\n",
x = "",
y = "Número total de eventos\n",
color = "",
caption = v_caption
) +
# Escalas
# scale_y_continuous(breaks = seq(0, 15, 2)) +
# Tema
tema +
theme(legend.position = "none")
View(df_limpio)
View(df_data)
df_data <- df_limpio %>% filter(str_detect(estado, "Sonora"),
!str_detect(evento, "detenidas"),
!str_detect(evento, "Personas privadas de la libertad"),
# !str_detect(evento, "heridas"),
fecha >= as.Date("2022-06-01"),
fecha <= as.Date("2022-08-31"))
# ---- Visualización
ggplot(
# Datos
df_data,
# Coordenadas
aes(x = fecha, y = total, group = evento, color = evento)) +
facet_wrap(~evento, ncol = 1) +
# Geoms
geom_line() +
geom_point() +
geom_vline(xintercept = v_arresto, linetype = "dashed") +
annotate("text", x = v_arresto + 100000, y = 14,
# label = if_else(df_data$evento == "Homicidios", "Arresto de Caro Quintero", NA_character_),
label = "Arresto de Caro Quintero",
size = 3, family = "Fira Sans", color = "#666666", hjust = 0) +
# geom_vline(xintercept = as.Date("2022-07-15"), linetype = "dashed") +
# Etiquetas
labs(
title    = "Eventos delictivos ocurridos en Sonora",
subtitle = "Diario y por tipo de evento\n",
x = "",
y = "Número total de eventos\n",
color = "",
caption = v_caption
) +
# Escalas
# scale_y_continuous(breaks = seq(0, 15, 2)) +
# Tema
tema +
theme(legend.position = "none")
ggsave(file = paste_fig("quintero.png"),
width = 6, height = 5)
# 0. Configuración inicial -----------------------------------------------------
# Silenciar mensajes de .group en dplyr
options(dplyr.summarise.inform = FALSE)
# Librerías
require(pacman)
p_load(
readxl, tidyverse, dplyr, srvyr, zoo, ggtext, beepr)
# Limpiar espacio de trabajo
rm(list=ls())
# Funciones con direcciones de las carpetas
paste_inp <- function(x){paste0("02_datos_crudos/" , x)}
paste_out <- function(x){paste0("03_datos_limpios/", x)}
paste_fig <- function(x){paste0("04_figuras/"      , x)}
m10 <- read_xlsx(paste_inp("Monitor2_PPD_noviembre25.11.xlsx"))
view(m10)
colnames(m10)
cuerpos <- m10 %>%
janitor::clean_names() %>%
cuerpos <- m10 %>%
janitor::clean_names()
colnames(cuerpos)
cuerpos <- m10 %>%
janitor::clean_names() %>%
select(cuerpos_casilla = x2_2_5_cuerpo_s_localizado_s_restos_humanos,
forma_cuerpo    = x2_2_6_cuerpo_localizado_restos_humanos,
lugar_cuerpo    = x2_2_7_lugar_del_cuerpo_localizado_restos_humanos)
View(cuerpos)
cuerpos <- m10 %>%
janitor::clean_names() %>%
select(cuerpos_casilla = x2_2_5_cuerpo_s_localizado_s_restos_humanos,
forma_cuerpo    = x2_2_6_cuerpo_localizado_restos_humanos,
lugar_cuerpo    = x2_2_7_lugar_del_cuerpo_localizado_restos_humanos) %>%
filter(cuerpos_casilla == "TRUE")
unique(cuerpos$forma_cuerpo)
table(unique(cuerpos$forma_cuerpo))
count(cuerpos, forma_cuerpo, sort = T)
count(cuerpos, forma_cuerpo, sort = T) %>% drop()
count(cuerpos$forma_cuerpo, sort = T) %>% drop()
count(cuerpos, forma_cuerpo, sort = T) %>% drop_na()
cuerpos2 <- data.frame(count(cuerpos, forma_cuerpo, sort = T) %>% drop_na())
View(cuerpos2)
cuerpos2 <- data.frame(count(cuerpos, forma_cuerpo, sort = T)
%>% drop_na()) %>% rename(frecuencia = n)
openxlsx::write.xlsx(cuerpos2, file = paste_out("formas_cuerpo.xlsx"), overwrite = T)
cuerpos3 <- data.frame(count(cuerpos, lugar_cuerpo, sort = T)
%>% drop_na()) %>% rename(frecuencia = n)
openxlsx::write.xlsx(cuerpos3, file = paste_out("lugar_cuerpo.xlsx"), overwrite = T)
View(cuerpos3)
View(cuerpos3)
options(dplyr.summarise.inform = FALSE)
# Librerías
require(pacman)
p_load(
readxl, tidyverse, dplyr, srvyr, lubridate, zoo, ggtext, beepr)
# Limpiar espacio de trabajo
rm(list=ls())
# Funciones con direcciones de las carpetas
paste_inp <- function(x){paste0("03_datos_limpios/"           , x)}
paste_fig <- function(x){paste0("04_figuras/"           , x)}
# 1. Cargar datos --------------------------------------------------------------
load(paste_inp("df_monitor_amplio.Rdata"))
# 2. Limpieza de datos ---------------------------------------------------------
## Base de datos de Sonora
df_sonora <- df_monitor_amplio %>%
filter(estado == "Sonora-26")
# Liberías
require(pacman)
p_load(readxl, tidyverse, dplyr, srvyr, lubridate, zoo, ggtext, beepr)
# Silenciar msj de .group en dplyr
options(dplyr.summarise.inform = FALSE)
# Limpiar espacio de trabajo
rm(list = ls ())
# Funciones con direcciones de las carpetas
paste_inp <- function(x){paste0("03_datos_limpios/", x)}
paste_fig <- function(x){paste0("04_figuras/"      , x)}
paste_out <- function(x){paste0("03_datos_limpios/", x)}
# 1. Cargar datos---------------------------------------------------------------
load(paste_inp("df_monitor_amplio.Rdata"))
# 2. Limpieza de los datos------------------------------------------------------
## Datos de Sonora--------------------------------------------------------------
df_sonora <- df_monitor_amplio %>%
filter(estado == "Sonora-26")
df_sonora <- df_monitor_amplio %>%
filter(estado == "Sonora-26") %>%
filter(fecha_de_los_hechos >= "2022-06-01") %>%
filter(fecha_de_los_hechos <= "2022-08-31")
View(df_sonora)
df_sonora_antes <- df_sonora %>%
filter(fecha_de_los_hechos >= "2022-06-01") %>%
filter(fecha_de_los_hechos <= "2022-07-14")
df_sonora_des <- df_sonora %>%
filter(fecha_de_los_hechos >= "2022-07-14") %>%
filter(fecha_de_los_hechos <= "2022-08-31")
openxlsx::write.xlsx(df_sonora_antes, file = paste_out("sonora_a.xlsx"), overwrite = T)
df_ataque_antes <- df_sonora_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_homicidios_total, pertenece_a, cuerpo_s_localizado_s,
numero_de_heridos_as_total, herido_a_pertenece_a,
ataque_armado,
autoridad_civil, autoridad_militar)
sum(df_ataque_antes$numero_de_homicidios_total) # de homicidios: 131
sum(df_ataque_antes$numero_de_heridos_as_total) # de heridos: 40
View(df_ataque_antes)
sum(df_ataque_antes$numero_de_homicidios_total, na.rm = T) # de homicidios: 131
sum(df_ataque_antes$numero_de_heridos_as_total, na.rm = T) # de heridos: 40
unique(df_ataque_antes$ataque_armado)
table(df_ataque_antes$ataque_armado) # agresion 75; enfren: 5; blanca: 1
agresion_a <- df_ataque_antes %>%
filter(ataque_armado == "agresión")
table(agresion_a$pertenece_a) # ho - comerciante 1, civil y militar 1
table(agresion_a$herido_a_pertenece_a) # he - colateral 1, menor de edad 2 y periodista 1
enfrentamiento_a <- df_ataque_antes %>%
filter(ataque_armado == "enfrentamiento")
table(enfrentamiento_a$pertenece_a)
table(enfrentamiento_a$herido_a_pertenece_a)
grupos_a <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, nombre_del_grupo_criminal_gc,
numero_de_homicidios_total, pertenece_a, cuerpo_s_localizado_s,
numero_de_heridos_as_total, herido_a_pertenece_a,
ataque_armado,
autoridad_civil, autoridad_militar)
df_ataque_antes <- df_sonora_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_homicidios_total, pertenece_a, cuerpo_s_localizado_s,
numero_de_heridos_as_total, herido_a_pertenece_a,
ataque_armado,
autoridad_civil, autoridad_militar,
nombre_del_grupo_criminal_gc)
View(df_sonora_antes)
colnames(df_sonora_antes)
grupos_a <- df_sonora_antes %>%
select(municipio, fecha_de_los_hechos,
nombre_del_grupo_criminal_gc, alianza_del_gc, rival_del_gc,
numero_de_homicidios_total, pertenece_a, cuerpo_s_localizado_s,
numero_de_heridos_as_total, herido_a_pertenece_a,
ataque_armado,
autoridad_civil, autoridad_militar)
table(grupos_a$nombre_del_grupo_criminal_gc)
table(grupos_a$alianza_del_gc)
table(grupos_a$rival_del_gc)
df_homicidios_a1 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, numero_de_homicidios_total) %>%
filter(numero_de_homicidios_total >= "1") %>%
group_by(fecha_de_los_hechos, municipio) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_homicidios_d1)
view(df_homicidios_a1)
df_homicidios_a2 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, numero_de_homicidios_total) %>%
filter(numero_de_homicidios_total >= "1") %>%
group_by(fecha_de_los_hechos) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_homicidios_a2)
# 3) Total homicidios - municipal
df_homicidios_a3 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, numero_de_homicidios_total) %>%
filter(numero_de_homicidios_total >= "1") %>%
group_by(municipio) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_homicidios_a3)
View(df_sonora_antes)
df_cuerpos_a1 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, numero_de_homicidios_total, pertenece_a, cuerpo_s_localizado_s) %>%
filter(cuerpo_s_localizado_s == "TRUE") %>%
group_by(fecha_de_los_hechos, municipio) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_cuerpos_d1)
df_cuerpos_a1 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, numero_de_homicidios_total, pertenece_a, cuerpo_s_localizado_s) %>%
filter(cuerpo_s_localizado_s == "TRUE") %>%
group_by(fecha_de_los_hechos, municipio) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_cuerpos_a1)
sum(df_cuerpos_a1$total_homicidios, na.rm = T) # cuerpos localizados: 66
df_cuerpos_a2 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, numero_de_homicidios_total, pertenece_a, cuerpo_s_localizado_s) %>%
filter(cuerpo_s_localizado_s == "TRUE") %>%
group_by(fecha_de_los_hechos) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_cuerpos_a2)
# 3) H - cuerpos localizados: municipios
df_cuerpos_a3 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, numero_de_homicidios_total, pertenece_a, cuerpo_s_localizado_s) %>%
filter(cuerpo_s_localizado_s == "TRUE") %>%
group_by(municipio) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_cuerpos_a3)
df_agre_a1 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_homicidios_total, pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "agresión") %>%
filter(numero_de_homicidios_total >= "1") %>%
group_by(fecha_de_los_hechos, municipio) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
# Total
sum(df_agre_a1$total_homicidios)
df_agre_a2 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_homicidios_total, pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "agresión") %>%
filter(numero_de_homicidios_total >= "1") %>%
group_by(fecha_de_los_hechos) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_agre_a2)
mean(df_agre_a2$total_homicidios)
# 3) H - agresión: municipios
df_agre_a3 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_homicidios_total, pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "agresión") %>%
filter(numero_de_homicidios_total >= "1") %>%
group_by(municipio) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_agre_a3)
df_enfren_a1 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_homicidios_total, pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "enfrentamiento") %>%
filter(numero_de_homicidios_total >= "1") %>%
group_by(fecha_de_los_hechos, municipio) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_enfren_a1)
# Total
sum(df_enfren_a1$total_homicidios)
df_enfren_a1 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_homicidios_total, pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "enfrentamiento") %>%
filter(numero_de_homicidios_total >= "1")
df_enfren_a2 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_homicidios_total, pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "enfrentamiento") %>%
filter(numero_de_homicidios_total >= "1") %>%
group_by(fecha_de_los_hechos) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_enfren_a2)
df_enfren_a3 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_homicidios_total, pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "enfrentamiento") %>%
filter(numero_de_homicidios_total >= "1") %>%
group_by(municipio) %>%
summarise(total_homicidios = sum(numero_de_homicidios_total, na.rm = T))
view(df_enfren_a3)
df_heridxs_a1 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, numero_de_heridos_as_total) %>%
group_by(fecha_de_los_hechos, municipio) %>%
summarise(total_heridxs = sum(numero_de_heridos_as_total, na.rm = T))
view(df_heridxs_a1)
# Total
sum(df_heridxs_a1$total_heridxs) # heridxs: 40
df_heridxs_a2 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, numero_de_heridos_as_total) %>%
group_by(fecha_de_los_hechos) %>%
summarise(total_heridxs = sum(numero_de_heridos_as_total, na.rm = T))
view(df_heridxs_a2)
df_heridxs_a3 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos, numero_de_heridos_as_total) %>%
group_by(municipio) %>%
summarise(total_heridxs = sum(numero_de_heridos_as_total, na.rm = T))
view(df_heridxs_a3)
df_agre_he_a1 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_heridos_as_total, herido_a_pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "agresión") %>%
filter(numero_de_heridos_as_total >= "1") %>%
group_by(fecha_de_los_hechos, municipio) %>%
summarise(total_heridos = sum(numero_de_heridos_as_total, na.rm = T))
view(df_agre_he_a1)
# Total
sum(df_agre_he_a1$total_heridos) # total heridos - agresión: 31
df_agre_he_a3 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_heridos_as_total, herido_a_pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "agresión") %>%
filter(numero_de_heridos_as_total >= "1") %>%
group_by(municipio) %>%
summarise(total_heridos = sum(numero_de_heridos_as_total, na.rm = T))
view(df_agre_he_a3)
df_enfren_he_a1 <- df_ataque_antes %>%
select(municipio, fecha_de_los_hechos,
numero_de_heridos_as_total, herido_a_pertenece_a,
ataque_armado) %>%
filter(ataque_armado == "enfrentamiento") %>%
filter(numero_de_heridos_as_total >= "1") %>%
group_by(fecha_de_los_hechos, municipio) %>%
summarise(total_heridos = sum(numero_de_heridos_as_total, na.rm = T))
# Total
sum(df_enfren_he_a1$total_heridos) # total heridos - enfrentamiento: 8
df_desaparecidos_a1 <- df_sonora_antes %>%
select(municipio, fecha_de_los_hechos,
privacion_de_la_libertad, numero_de_personas_privadas_de_su_libertad) %>%
filter(privacion_de_la_libertad == "TRUE") %>%
filter(numero_de_personas_privadas_de_su_libertad >= "1") %>%
group_by(fecha_de_los_hechos, municipio) %>%
summarise(total_desaparecidos = sum(numero_de_personas_privadas_de_su_libertad, na.rm = T))
sum(df_desaparecidos_a1$total_desaparecidos) # desaparecido:98
View(df_desaparecidos_a1)
